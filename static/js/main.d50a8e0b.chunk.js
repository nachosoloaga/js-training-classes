(this["webpackJsonpspectacle-presentation"]=this["webpackJsonpspectacle-presentation"]||[]).push([[0],{16:function(e,n,s){"use strict";s.r(n);var r=s(55);s.d(n,"Agenda",(function(){return r.default}));var a=s(56);s.d(n,"BuiltInFunctions",(function(){return a.default}));var t=s(57);s.d(n,"DomIntro",(function(){return t.default}));var o=s(58);s.d(n,"WindowAPI",(function(){return o.default}));var c=s(59);s.d(n,"Debugger",(function(){return c.default}));var i=s(60);s.d(n,"Callbacks",(function(){return i.default}));var l=s(61);s.d(n,"Events",(function(){return l.default}));var d=s(62);s.d(n,"Exercises",(function(){return d.default}))},17:function(e,n,s){"use strict";s.r(n);var r=s(78);s.d(n,"Agenda",(function(){return r.default}));var a=s(79);s.d(n,"ExecutionContext",(function(){return a.default}));var t=s(80);s.d(n,"BlockingCode",(function(){return t.default}));var o=s(81);s.d(n,"Promises",(function(){return o.default}));var c=s(82);s.d(n,"AsyncAwait",(function(){return c.default}));var i=s(83);s.d(n,"AJAX",(function(){return i.default}));var l=s(84);s.d(n,"XMLHttpRequest",(function(){return l.default}));var d=s(85);s.d(n,"FetchAPI",(function(){return d.default}))},193:function(e,n){},40:function(e,n,s){},509:function(e,n,s){var r={"./class1":53,"./class1/":53,"./class1/index":53,"./class1/index.jsx":53,"./class2":54,"./class2/":54,"./class2/index":54,"./class2/index.jsx":54,"./class2/slides":16,"./class2/slides/":16,"./class2/slides/Agenda":55,"./class2/slides/Agenda.jsx":55,"./class2/slides/BuiltInFunctions":56,"./class2/slides/BuiltInFunctions.jsx":56,"./class2/slides/Callbacks":60,"./class2/slides/Callbacks.jsx":60,"./class2/slides/Debugger":59,"./class2/slides/Debugger.jsx":59,"./class2/slides/DomIntro":57,"./class2/slides/DomIntro.jsx":57,"./class2/slides/Events":61,"./class2/slides/Events.jsx":61,"./class2/slides/Exercises":62,"./class2/slides/Exercises.jsx":62,"./class2/slides/WindowAPI":58,"./class2/slides/WindowAPI.jsx":58,"./class2/slides/index":16,"./class2/slides/index.jsx":16,"./class3":63,"./class3/":63,"./class3/index":63,"./class3/index.jsx":63,"./class3/slides":9,"./class3/slides/":9,"./class3/slides/Agenda":75,"./class3/slides/Agenda.jsx":75,"./class3/slides/ArrayMethods":65,"./class3/slides/ArrayMethods.jsx":65,"./class3/slides/ArrowFunctions":70,"./class3/slides/ArrowFunctions.jsx":70,"./class3/slides/Classes":72,"./class3/slides/Classes.jsx":72,"./class3/slides/ConditionalChaining":68,"./class3/slides/ConditionalChaining.jsx":68,"./class3/slides/Destructuring":67,"./class3/slides/Destructuring.jsx":67,"./class3/slides/Excercises":76,"./class3/slides/Excercises.jsx":76,"./class3/slides/Introduction":64,"./class3/slides/Introduction.jsx":64,"./class3/slides/Modules":69,"./class3/slides/Modules.jsx":69,"./class3/slides/NewDataStructures":74,"./class3/slides/NewDataStructures.jsx":74,"./class3/slides/RestSpread":66,"./class3/slides/RestSpread.jsx":66,"./class3/slides/StrictMode":73,"./class3/slides/StrictMode.jsx":73,"./class3/slides/TemplateLiterals":71,"./class3/slides/TemplateLiterals.jsx":71,"./class3/slides/index":9,"./class3/slides/index.jsx":9,"./class4":77,"./class4/":77,"./class4/index":77,"./class4/index.jsx":77,"./class4/slides":17,"./class4/slides/":17,"./class4/slides/AJAX":83,"./class4/slides/AJAX.jsx":83,"./class4/slides/Agenda":78,"./class4/slides/Agenda.jsx":78,"./class4/slides/AsyncAwait":82,"./class4/slides/AsyncAwait.jsx":82,"./class4/slides/BlockingCode":80,"./class4/slides/BlockingCode.jsx":80,"./class4/slides/ExecutionContext":79,"./class4/slides/ExecutionContext.jsx":79,"./class4/slides/FetchAPI":85,"./class4/slides/FetchAPI.jsx":85,"./class4/slides/Promises":81,"./class4/slides/Promises.jsx":81,"./class4/slides/XMLHttpRequest":84,"./class4/slides/XMLHttpRequest.jsx":84,"./class4/slides/index":17,"./class4/slides/index.jsx":17};function a(e){var n=t(e);return s(n)}function t(e){if(!s.o(r,e)){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}return r[e]}a.keys=function(){return Object.keys(r)},a.resolve=t,e.exports=a,a.id=509},510:function(e,n,s){"use strict";s.r(n);var r=s(2),a=s.n(r),t=s(35),o=s.n(t),c=s(86),i=s(7),l=[{classNumber:1,slidesDirectory:"class1"},{classNumber:2,slidesDirectory:"class2"},{classNumber:3,slidesDirectory:"class3"},{classNumber:4,slidesDirectory:"class4"}],d=s(0),j=function(){return Object(d.jsxs)("div",{className:"menu",children:[Object(d.jsx)("h1",{className:"menu-header",children:"\ud83d\udc4b JS Training Classes \ud83d\ude80"}),Object(d.jsx)("ul",{className:"menu-list",children:l.map((function(e){var n=e.classNumber;return Object(d.jsx)("li",{children:Object(d.jsx)(c.b,{className:"menu-list-item",to:"classes/".concat(n),children:"\ud83d\udcd6 Clase ".concat(n)})},n)}))})]})},u=s(1),b={colors:{primary:"#d9d9d9",secondary:"#d9d9d9",backgroundColor:"#0d0d0d"},fonts:{header:"Roboto",text:"Roboto"}},p=function(){return Object(d.jsxs)(u.d,{justifyContent:"space-between",position:"absolute",bottom:0,width:1,children:[Object(d.jsx)(u.a,{padding:"0 1em",children:Object(d.jsx)(u.e,{})}),Object(d.jsx)(u.a,{padding:"1em"})]})},h=function(e){var n=e.slides;return Object(d.jsx)(u.c,{theme:b,template:p,children:Object(d.jsx)("div",{style:{backgroundColor:"#ffd84d"},children:n})})},x=function(e){return s(509)("./".concat(e)).default()},m=function(e,n){return Object(d.jsx)(e,{slides:x(n)})},g=function(){return Object(d.jsx)(c.a,{children:Object(d.jsxs)(i.d,{children:[Object(d.jsx)(i.b,{exact:!0,path:"/menu",component:j}),l.map((function(e){var n=e.classNumber,s=e.slidesDirectory;return Object(d.jsx)(i.b,{exact:!0,path:"/classes/".concat(n),render:function(){return m(h,s)}},n)})),Object(d.jsx)(i.b,{path:"/",children:Object(d.jsx)(i.a,{to:"menu"})})]})})};s(40);o.a.render(Object(d.jsx)(a.a.StrictMode,{children:Object(d.jsx)(g,{})}),document.getElementById("root"))},53:function(e,n,s){"use strict";s.r(n);s(2);var r=s(1),a=(s(40),s(0));n.default=function(){return Object(a.jsxs)(a.Fragment,{children:[Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",className:"flex-center-column",children:[Object(a.jsx)(r.g,{margin:"0px",className:"font-size-heading",children:Object(a.jsx)("i",{children:"Agenda"})}),Object(a.jsx)(r.l,{children:Object(a.jsxs)(r.f,{gridTemplateColumns:"1fr 1fr",gridColumnGap:15,fontSize:30,children:[Object(a.jsx)(r.j,{children:"Surgimiento de JS"}),Object(a.jsx)(r.j,{children:"Caracter\xedsticas"}),Object(a.jsx)(r.j,{children:"\xbfQu\xe9 es ECMAScript?"}),Object(a.jsx)(r.j,{children:"Sintaxis b\xe1sica"}),Object(a.jsx)(r.j,{children:"Variables - var, let, const"}),Object(a.jsx)(r.j,{children:"Tipos de datos"}),Object(a.jsx)(r.j,{children:"Operadores l\xf3gicos"}),Object(a.jsx)(r.j,{children:"Estructuras de control"}),Object(a.jsx)(r.j,{children:"Excepciones"}),Object(a.jsx)(r.j,{children:"Funciones"}),Object(a.jsx)(r.j,{children:"Window API"}),Object(a.jsx)(r.j,{children:"Debugging"})]})})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",padding:"0px",className:"font-size-heading",children:Object(a.jsx)("i",{children:"Javascript"})}),Object(a.jsxs)(r.s,{fontSize:30,children:['JavaScript fue creado inicialmente con un \xfanico prop\xf3sito, "traer vida a las p\xe1ginas web" - ',Object(a.jsx)("i",{children:"make web pages alive"}),". Hoy en d\xeda se utiliza en muchos otros entornos tambi\xe9n."]}),Object(a.jsx)(r.s,{fontSize:30,children:"Fue desarrollado originalmente por Brendan Eich de Netscape con el nombre de Mocha, el cual fue renombrado posteriormente a LiveScript, para finalmente quedar como JavaScript. Este \xfaltimo cambio de nombre se realiz\xf3 en diciembre de 1995."})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",padding:"0px",className:"font-size-heading",children:Object(a.jsx)("i",{children:"Javascript"})}),Object(a.jsx)(r.s,{fontSize:30,children:"Los programas escritos en JavaScript son llamados scripts y no necesitan de ning\xfan tipo de procesamiento especial o compilaci\xf3n para ser ejecutados. De hecho, pueden ser escritos directamente en el c\xf3digo HTML de una p\xe1gina web y se ejecutar\xe1 cuando \xe9sta sea cargada."}),Object(a.jsx)(r.s,{fontSize:30,children:"Se define como orientado a objetos, basado en prototipos, imperativo, d\xe9bilmente tipado y din\xe1mico."})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",padding:"0px",className:"font-size-heading",children:Object(a.jsx)("i",{children:"Javascript"})}),Object(a.jsx)(r.s,{fontSize:30,children:"Podemos destacar varias cosas \xfanicas del lenguaje"}),Object(a.jsxs)(r.t,{fontSize:30,children:[Object(a.jsx)(r.j,{children:"Es el lenguaje con integraci\xf3n completa con HTML y CSS m\xe1s adoptado de la web."}),Object(a.jsx)(r.j,{children:"Simple de usar."}),Object(a.jsx)(r.j,{children:"Muy utilizado en la industria y actualmente en toda la web."}),Object(a.jsx)(r.j,{children:'En la actualidad existen muchos lenguajes construidos que se "transpilan" luego a JS y extienden o proveen nuevas funcionalidades.'}),Object(a.jsx)(r.j,{children:"Es un lenguaje multi-paradigma."}),Object(a.jsx)(r.j,{children:"Existe una gran variedad de frameworks JS, tanto Frontend como Backend."})]})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",padding:"0px",className:"font-size-heading",children:Object(a.jsx)("i",{children:"ECMAScript"})}),Object(a.jsxs)(r.s,{fontSize:30,children:[Object(a.jsx)("a",{href:"https://en.wikipedia.org/wiki/ECMAScript",children:"ECMAScript"})," es un est\xe1ndar que define un lenguaje de tipos din\xe1micos ligeramente inspirado en Java y otros lenguajes del estilo de C. Soporta algunas caracter\xedsticas de la programaci\xf3n orientada a objetos mediante objetos basados en prototipos y pseudoclases."]}),Object(a.jsx)(r.s,{fontSize:30,children:"El objetivo de este estandar es asegurar la interoperabilidad de las p\xe1ginas web entre diferentes navegadores web."}),Object(a.jsx)(r.s,{fontSize:30,children:"JavaScript es un lenguaje de programaci\xf3n que implementa este estandar - ECMAScript est\xe1 basado en JavaScript."})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",className:"font-size-heading",children:"Variables"}),Object(a.jsx)(r.s,{fontSize:30,children:"Las variables son contenedores que nos permiten almacenar valores para su posterior uso y/o manipulaci\xf3n."}),Object(a.jsxs)(r.s,{fontSize:30,children:["Para declarar una variable podemos utilizar la palabra clave ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/let",children:Object(a.jsx)("b",{children:"let"})}),"."]}),Object(a.jsx)(r.b,{language:"js",children:"\n          let myVariable;\n          // Initialize with an initial value\n          let myVariable = 'Hola Snapplerxs!';\n        "})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",className:"font-size-heading",children:"Variables"}),Object(a.jsx)(r.s,{fontSize:30,children:"JavaScript es un lenguaje din\xe1mico y de tipado flexible. En parte esto significa que las variables no est\xe1n asociadas directamente con ning\xfan tipo de valor en particular y se les pueden asignar o reasignar valores de todos los tipos."}),Object(a.jsx)(r.b,{language:"js",children:"\n          let foo = 42; // foo is a number\n          foo = 'bar';  // foo is a string\n          foo = true;   // foo is a boolean\n\n          // Uncaught SyntaxError: Identifier 'foo' has already been declared\n          let foo = 10;\n        "})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",className:"font-size-heading",children:"Variables"}),Object(a.jsxs)(r.s,{fontSize:30,children:["Para definir variables tambi\xe9n podemos utilizar la palabra clave ",Object(a.jsx)("b",{children:"var"}),"."]}),Object(a.jsxs)(r.s,{fontSize:30,children:[Object(a.jsx)("b",{children:"var"})," se comporta distinto a ",Object(a.jsx)("b",{children:"let"})," y su uso actualmente no es muy recomendado. Explicaremos las razones m\xe1s adelante."]}),Object(a.jsx)(r.b,{language:"js",children:"\n          var foo = 42; // foo is a number\n        "})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",className:"font-size-heading",children:"Constantes"}),Object(a.jsx)(r.s,{fontSize:30,children:"A diferencia de las variables, las constantes no pueden cambiar su valor posteriormente. Se debe especificar el valor al momento de su declaraci\xf3n."}),Object(a.jsxs)(r.s,{fontSize:30,children:["Para definir una constante, usamos la palabra clave ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/const",children:"const"}),"."]}),Object(a.jsx)(r.b,{language:"js",children:"\n          const FOO = \"bar\";\n\n          // this will throw an error - Uncaught TypeError: Assignment to constant variable.\n          FOO = 20;\n\n          // trying to redeclare a constant throws an error\n          // Uncaught SyntaxError: Identifier 'FOO' has already been declared\n          const FOO = 20;\n        "}),Object(a.jsx)(r.k,{children:"Las constantes pueden ser declaradas con may\xfasculas o min\xfasculas, pero generalmente se definen con todas sus letras en may\xfascula a modo de convenci\xf3n."})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",padding:"0px",className:"font-size-heading",children:"Comentarios"}),Object(a.jsx)(r.s,{fontSize:30,children:"En JavaScript, al igual que en todos los lenguajes, tenemos la posibilidad de agregar comentarios en nuestro c\xf3digo."}),Object(a.jsx)(r.s,{fontSize:30,children:"Podemos agregar comentarios single line o multi line."}),Object(a.jsx)(r.b,{language:"js",children:"\n          // This is a single line comment.\n\n          /*\n          You can use this kind of comments\n          for documentation or to explain\n          any complex sentence.\n          */\n        "})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",className:"font-size-heading",children:"Valores y estructuras de datos"}),Object(a.jsx)(r.s,{fontSize:30,children:"Todos los lenguajes de programaci\xf3n tienen estructuras de datos integradas."}),Object(a.jsx)(r.s,{fontSize:30,children:"Generalmente var\xedan sus nombres o formas de utilizaci\xf3n de un lenguaje a otro."})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",className:"font-size-heading",children:"Tipos de datos primitivos"}),Object(a.jsxs)(r.s,{className:"align-center",fontSize:30,margin:"0px",padding:"0px",children:["JavaScript cuenta con un conjunto de tipos que son llamados ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#primitive_values",children:"tipos primitivos"}),". Estos tipos definen valores que son inmutables."]}),Object(a.jsxs)(r.t,{className:"flex-center-column",fontSize:30,children:[Object(a.jsx)(r.j,{children:Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",children:"Undefined"})}),Object(a.jsx)(r.j,{children:Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",children:"Boolean"})}),Object(a.jsx)(r.j,{children:Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",children:"Number"})}),Object(a.jsx)(r.j,{children:Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",children:"String"})}),Object(a.jsx)(r.j,{children:Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt",children:"BigInt"})}),Object(a.jsx)(r.j,{children:Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/symbol",children:"Symbol"})})]})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",className:"font-size-heading",children:"Undefined"}),Object(a.jsxs)(r.s,{className:"align-center",fontSize:30,children:[Object(a.jsx)("b",{children:"undefined"})," es una variable global que posee como valor inicial el tipo primitivo undefined."]}),Object(a.jsxs)(r.t,{fontSize:30,children:[Object(a.jsx)(r.j,{children:"Una variable que no tiene un valor asignado, es creada con el valor undefined."}),Object(a.jsx)(r.j,{children:"Una funci\xf3n que no posee una sentencia return, devuelve undefined."})]}),Object(a.jsx)(r.b,{language:"js",children:'\n          let foo;\n\n          console.log(foo); // undefined\n          typeof foo // "undefined"\n        '})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",className:"font-size-heading align-center",style:{width:"80%"},children:"Null"}),Object(a.jsxs)("div",{style:{width:"80%"},children:[Object(a.jsx)(r.s,{fontSize:30,children:"Este valor se utiliza para representar la no existencia o invalidez de algo, generalmente de manera intencional."}),Object(a.jsxs)(r.d,{justifyContent:"space-between",style:{width:"80%"},children:[Object(a.jsx)(r.b,{language:"js",children:"\n              const foo = null;\n\n              console.log(foo); // null\n              typeof foo // ?\n            "}),Object(a.jsx)("iframe",{src:"".concat("/js-training-classes","/snippets/class1/null.html")})]})]})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Null vs Undefined"}),Object(a.jsxs)(r.s,{fontSize:30,children:["Null y undefined son dos tipos primitivos diferentes y no existe un comportamiento intuitivo cuando estos tipos se comparan con otros. Para m\xe1s info ver este ",Object(a.jsx)("a",{href:"https://javascript.info/comparison#comparison-with-null-and-undefined",children:"link"}),"."]}),Object(a.jsx)(r.s,{fontSize:30,children:"Generalmente el valor null es algo que se utiliza de manera intencional para indicar la no existencia de algo, mientras que undefined no suele usarse tanto de manera intencional, y representa que una variable fue declarada pero a\xfan no tiene un valor definido."}),Object(a.jsx)(r.b,{language:"js",children:"\n          const logHi = (str = 'hi') => console.log(str);\n\n          logHi(undefined); // 'hi'\n\n          logHi(null); // null\n        "}),Object(a.jsx)(r.k,{children:"logHi(undefined); // imprime hi logHi(null); // imprime null"})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Boolean"}),Object(a.jsxs)(r.s,{fontSize:30,children:["Representa una entidad l\xf3gica que solo puede tomar los valores ",Object(a.jsx)("b",{children:"true"})," o ",Object(a.jsx)("b",{children:"false"}),"."]}),Object(a.jsx)(r.s,{fontSize:30,children:"Podemos usar la funci\xf3n Boolean para convertir cualquier elemento a boolean."}),Object(a.jsxs)(r.s,{fontSize:30,children:['Si el valor es omitido o es 0, -0, null, false, NaN, undefined, o un String vac\xedo (""), el objeto tendr\xe1 un valor inicial ',Object(a.jsx)("b",{children:"false"}),"."]}),Object(a.jsxs)(r.s,{fontSize:30,children:['El resto de los valores, incluyendo Arrays vac\xedos y el String "false", crean un objeto con un valor inicial de ',Object(a.jsx)("b",{children:"true"}),"."]})]}),Object(a.jsx)(r.n,{backgroundColor:"#0d0d0d",children:Object(a.jsxs)("div",{style:{width:"80%"},children:[Object(a.jsx)(r.g,{margin:"0px",className:"font-size-heading",children:"Boolean"}),Object(a.jsxs)(r.f,{gridTemplateRows:"1fr 1fr",gridRowGap:50,children:[Object(a.jsxs)(r.d,{justifyContent:"space-between",style:{width:"80%"},children:[Object(a.jsx)(r.b,{language:"js",children:'\n                const bool = true;\n                \n                if (bool) {\n                  console.log("Hola Snapplerxs!");\n                };\n                '}),Object(a.jsx)("iframe",{src:"".concat("/js-training-classes","/snippets/class1/boolean1.html")})]}),Object(a.jsxs)(r.d,{justifyContent:"space-between",style:{width:"80%"},children:[Object(a.jsx)(r.b,{language:"js",children:'\n                const bool = false;\n\n                if (bool) {\n                  console.log("Hola Snapplerxs!");\n                };\n                '}),Object(a.jsx)("iframe",{src:"".concat("/js-training-classes","/snippets/class1/boolean2.html")})]})]})]})}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsxs)("div",{style:{width:"80%"},children:[Object(a.jsx)(r.g,{margin:"0px",className:"font-size-heading",children:"Boolean"}),Object(a.jsxs)(r.f,{gridTemplateRows:"1fr 1fr",gridRowGap:50,children:[Object(a.jsxs)(r.d,{justifyContent:"space-between",style:{width:"80%"},children:[Object(a.jsx)(r.b,{language:"js",children:'\n                const bool = Boolean(false);\n\n                if (bool) {\n                  console.log("Hola Snapplerxs!");\n                };\n                '}),Object(a.jsx)("iframe",{src:"".concat("/js-training-classes","/snippets/class1/boolean3.html")})]}),Object(a.jsxs)(r.d,{justifyContent:"space-between",style:{width:"80%"},children:[Object(a.jsx)(r.b,{language:"js",children:'\n                const bool = new Boolean(false);\n\n                if (bool) {\n                  console.log("Hola Snapplerxs!");\n                };\n                '}),Object(a.jsx)("iframe",{src:"".concat("/js-training-classes","/snippets/class1/boolean4.html")})]})]})]}),Object(a.jsx)(r.k,{children:"No confundir el objeto Booelan con los valores primitivos Boolean ni con la funci\xf3n Boolean. La funci\xf3n Boolean puede ser usada para generar valores primitivos, pero al hacer un new estamos creando un objeto, que al ser evaluado tendr\xe1 un valor de verdad verdadero."})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Number"}),Object(a.jsxs)(r.s,{fontSize:30,children:["ECMAScript posee dos tipos distintos de n\xfameros: ",Object(a.jsx)("b",{children:"Number"})," y ",Object(a.jsx)("b",{children:"BigInt"}),"."]}),Object(a.jsxs)(r.s,{fontSize:30,children:["Number es un valor binario de 64 bits de doble precisi\xf3n. Representa n\xfameros entre ",Object(a.jsx)("b",{children:"- (2 ^ 53 - 1)"})," y ",Object(a.jsx)("b",{children:"2 ^ 53 - 1"}),"."]}),Object(a.jsx)(r.s,{fontSize:30,children:'Adem\xe1s de representar n\xfameros de punto flotante, el tipo de n\xfamero tiene tres valores simb\xf3licos: + Infinito, -Infinito y NaN ("No es un n\xfamero").'})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Number"}),Object(a.jsxs)(r.s,{fontSize:30,children:["Para verificar el valor m\xe1s grande o el valor m\xe1s peque\xf1o disponible dentro de \xb1 Infinito, se pueden usar las constantes ",Object(a.jsx)("b",{children:"Number.MAX_VALUE"})," o ",Object(a.jsx)("b",{children:"Number.MIN_VALUE"})]}),Object(a.jsx)(r.s,{fontSize:30,children:"El 0 que puede ser representado como +0 y -0. En la pr\xe1ctica esto no tiene mucho impacto ya que -0 === +0, sin embargo se puede notar algunas diferencias al dividir por 0."}),Object(a.jsx)(r.b,{language:"js",children:"\n          42 / +0 == Infinity\n          42 / -0 == -Infinity\n        "})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"BigInt"}),Object(a.jsx)(r.s,{fontSize:30,children:"El tipo BigInt permite representar n\xfameros con una precisi\xf3n arbitraria, es decir que permite operar con n\xfameros que superen los l\xedmites planteados por el tipo Number."}),Object(a.jsx)(r.s,{fontSize:30,children:"Un BigInt se crea agregando n al final de un n\xfamero entero o llamando al constructor."}),Object(a.jsx)(r.b,{language:"js",children:"\n          const x = 2n ** 53n; // 9007199254740992n\n\n          const y = BigInt(23) // 23n\n        "})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Symbol"}),Object(a.jsx)(r.s,{fontSize:30,children:"Es un valor primitivo \xfanico e inmutable y se puede utilizar como clave de una propiedad de objeto."}),Object(a.jsx)(r.s,{fontSize:30,children:"Se crea invocando la funci\xf3n Symbol, que produce din\xe1micamente un valor \xfanico y an\xf3nimo."}),Object(a.jsx)(r.b,{language:"js",children:'\n          let Sym1 = Symbol("Sym")\n          let Sym2 = Symbol("Sym")\n          \n          console.log(Sym1 === Sym2) // returns "false"\n        '})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"String"}),Object(a.jsx)(r.s,{fontSize:30,children:"Sirve para representar una cadena de caracteres. La longitud del string est\xe1 dada por la cantidad de elementos que lo componen."}),Object(a.jsx)(r.s,{fontSize:30,children:"El primer elemento est\xe1 en el \xedndice 0, el siguiente en el \xedndice 1, y as\xed sucesivamente. La longitud de una cadena es el n\xfamero de elementos que contiene."}),Object(a.jsx)(r.b,{language:"js",children:"\n          const foo = 'Hello'\n\n          foo.length // 5\n          foo[0]     // H\n        "})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"String"}),Object(a.jsx)(r.s,{fontSize:30,children:"Existe una gran cantidad de m\xe9todos que permiten manipular Strings, al igual que en la mayor\xeda de los lenguajes"}),Object(a.jsxs)(r.s,{fontSize:30,children:["Algunos ejemplos se pueden encontrar ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Learn/JavaScript/First_steps/Useful_string_methods",children:"aqu\xed"}),"."]}),Object(a.jsx)(r.k,{children:"Mencionar split, slice, splice, indexOf, replace, toLowercase, toUppercase, etc."})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Conversi\xf3n de tipos"}),Object(a.jsx)(r.s,{fontSize:30,children:"Muchas veces los operadores y las funciones convierten autom\xe1ticamente los valores recibidos al tipo correcto. Por ejemplo, la funci\xf3n alert convierte autom\xe1ticamente cualquier valor recibido a string, y las operaciones matem\xe1ticas convierten cualquier tipo a number."}),Object(a.jsxs)(r.s,{fontSize:30,children:["Sin embargo, a veces necesitamos expl\xedcitamente hacer una ",Object(a.jsx)("a",{href:"https://javascript.info/type-conversions",children:"conversion de tipos."})]}),Object(a.jsxs)(r.s,{fontSize:30,children:["En otros lenguajes este proceso es tambi\xe9n conocido como ",Object(a.jsx)("b",{children:"casteo de tipos."})]})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Conversi\xf3n a String"}),Object(a.jsx)(r.b,{language:"js",children:'\n          // String conversion\n\n          let value = true;\n          console.log(typeof value); // boolean\n          \n          value = String(value); // now value is a string "true"\n          console.log(typeof value); // string\n        '})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Conversi\xf3n a Number"}),Object(a.jsx)(r.b,{language:"js",children:'\n          // Number conversion\n\n          let str = "123";\n          console.log(typeof str); // string\n          \n          let num = Number(str); // becomes a number 123\n          \n          console.log(typeof num)\n        '})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Conversi\xf3n a Boolean"}),Object(a.jsxs)(r.s,{fontsize:30,children:["Las reglas de conversi\xf3n son simples:",Object(a.jsxs)(r.t,{fontSize:30,children:[Object(a.jsxs)(r.j,{children:['Valores que son intuitivamente "vacios", como por ejemplo 0, un string vac\xedo, null, undefined y NaN se convierten en ',Object(a.jsx)("b",{children:"false."})]}),Object(a.jsxs)(r.j,{children:["El resto se convierten a ",Object(a.jsx)("b",{children:"true."})]})]})]}),Object(a.jsx)(r.b,{language:"js",children:'\n          // Boolean Conversion\n\n          console.log(Boolean(1)); // true\n          console.log(Boolean(0)); // false\n          \n          console.log(Boolean("hello")); // true\n          console.log(Boolean("")); // false\n        '})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Arreglos"}),Object(a.jsx)(r.s,{fontSize:30,children:"Son objetos en forma de lista que poseen una asociaci\xf3n particular entre claves n\xfamericas enteras y la longitud de la lista. Podemos decir que son estructuras indexadas."}),Object(a.jsxs)(r.s,{fontSize:30,children:["Para definir un arreglo podemos usar corchetes ([]) o generar una instancia utilizando la funci\xf3n ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Array",children:"Array()"}),"."]}),Object(a.jsx)(r.b,{language:"js",children:"\n          const fruits = ['Apple', 'Banana'];\n\n          const moreFruits = new Array('Orange', 'Watermelon');\n        "})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Arreglos"}),Object(a.jsx)(r.s,{fontSize:30,children:"Para acceder a los elementos podemos utilizar un \xedndice num\xe9rico indicando la posici\xf3n."}),Object(a.jsxs)(r.s,{fontSize:30,children:["Tambi\xe9n existe una gran variedad de m\xe9todos que nos permiten iterar, duplicar, partir y manipular los arreglos de m\xfaltiples formas distintas. Algunos ejemplos ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",children:"aqu\xed"}),"."]}),Object(a.jsx)(r.b,{language:"js",children:"\n          const fruits = ['Apple', 'Banana'];\n\n          console.log(fruits.length); // 2\n          console.log(fruits[0]); // Apple\n\n          fruits.push('Pear'); ['Apple', 'Banana', 'Pear'];\n          fruits.pop(); 'Pear';\n          fruits.shift(); 'Apple';\n        "})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Objetos"}),Object(a.jsx)(r.s,{fontSize:30,children:'Podemos ver a los objetos como una colecci\xf3n de propiedades, cada una de los cuales posee un valor asociado. Las propiedades de un objeto son identificadas por "claves".'}),Object(a.jsx)(r.s,{fontSize:30,children:"Las claves de un objeto pueden ser de tipo String o Symbol, pero los valores pueden ser de cualquier tipo, incluso otros objetos."}),Object(a.jsx)(r.k,{children:"Notar que se describe a los objetos como collecci\xf3n de propiedades, no simplemente de claves y valores. Las propiedades tienen un valor, pero adem\xe1s de eso existen otros atributos."})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Objetos"}),Object(a.jsxs)(r.s,{fontSize:30,children:["Podemos crear objetos utilizando la ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Grammar_and_types#object_literals",children:"object literal syntax"})," o a trav\xe9s de la instanciaci\xf3n de Object."]}),Object(a.jsx)(r.b,{language:"js",children:"\n          let car = new Object();\n          car.brand = 'Ford';\n          car.model = 'Mustang';\n          car.year = 1969;\n          \n          let car2 = {\n            brand: 'Ford',\n            model: 'Mustang',\n            year: 1969\n          };\n        "})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Objetos"}),Object(a.jsx)(r.s,{fontSize:30,children:"Es muy f\xe1cil acceder, borrar o actualizar los valores de cualquiera de sus claves."}),Object(a.jsx)(r.b,{language:"js",children:"\n          let car = {\n            brand: 'Ford',\n            model: 'Mustang',\n            year: 1969\n          };\n\n          car.brand = 'Chevrolet';\n          \n          console.log(car.brand); // Chevrolet\n\n          delete(car.year);\n          console.log(car); // { brand: 'Chevrolet', model: 'Mustang' }\n        "})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Objetos"}),Object(a.jsxs)(r.s,{fontSize:30,children:["Adem\xe1s del valor, las propiedades poseen otros atributos. ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#objects",children:"M\xe1s info"}),"."]}),Object(a.jsx)("div",{style:{textAlign:"center"},children:Object(a.jsx)("img",{src:"".concat("/js-training-classes","/images/property_attributes.png"),alt:"property_attributes",width:"80%",height:"80%"})})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Objetos"}),Object(a.jsxs)(r.s,{fontSize:30,children:["Para poder modificar alguno de los otros atributos de una propiedad de un objeto podemos utilizar el m\xe9todo ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty",children:"Object.defineProperty()"}),"."]}),Object(a.jsx)(r.b,{language:"js",children:"\n          let car = {\n            brand: 'Ford'\n          };\n\n          Object.defineProperty(car, 'model', {\n            value: 'Mustang',\n            writable: false\n          });\n\n          car.brand = 'Chevrolet';\n          car.model = 'Camaro';\n          \n          console.log(car); // { brand: 'Chevrolet', model: 'Mustang' }\n        "})]}),Object(a.jsx)(r.n,{backgroundColor:"#0d0d0d",children:Object(a.jsxs)("div",{children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:'Valores "falsy" y "truthy"'}),Object(a.jsxs)(r.s,{fontSize:30,children:["En\xa0JavaScript, un\xa0valor verdadero\xa0(truthy) es un valor que se considera ",Object(a.jsx)("b",{children:"true"})," cuando es evaluado en un contexto\xa0Booleano. Todos los valores son verdaderos excepto aquellos que evaluan a ",Object(a.jsx)("b",{children:"false: "}),Object(a.jsx)("strong",{style:{color:"lightseagreen"},children:'false,\xa00,\xa0"",\xa0null,\xa0undefined, y\xa0NaN'}),"."]}),Object(a.jsx)(r.b,{language:"js",children:'\n            // For example, these conditions will enter the if statement\n            if (true)\n            if ({})\n            if ([])\n            if (42)\n            if ("foo")\n            if (new Date())\n            if (-42)\n            if (3.14)\n            if (-3.14)\n            if (Infinity)\n            if (-Infinity)\n          '})]})}),Object(a.jsx)(r.n,{backgroundColor:"#0d0d0d",children:Object(a.jsxs)("div",{className:"flex-center-column",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Operadores l\xf3gicos"}),Object(a.jsx)(r.s,{fontSize:30,children:"En JavaScript existen 4 operadores l\xf3gicos:"}),Object(a.jsxs)(r.t,{fontSize:30,children:[Object(a.jsx)(r.j,{children:"|| (OR)"}),Object(a.jsx)(r.j,{children:"&& (AND)"}),Object(a.jsx)(r.j,{children:"! (NOT)"}),Object(a.jsx)(r.j,{children:"?? (Nullish Coalescing)"})]})]})}),Object(a.jsx)(r.n,{backgroundColor:"#0d0d0d",children:Object(a.jsxs)("div",{className:"flex-center-column",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:50,children:"|| (OR)"}),Object(a.jsx)(r.s,{fontSize:30,children:"El operador l\xf3gico OR evalua a False cuando ambos operandos son False. Caso contrario, siempre evalua a True."}),Object(a.jsxs)(r.s,{fontSize:30,children:["En JS la evaluaci\xf3n del OR es de ",Object(a.jsx)("b",{children:"circuito corto"}),"."]}),Object(a.jsx)(r.b,{language:"js",children:"\n            let result = value1 || value2 || value3;\n          "}),Object(a.jsxs)(r.s,{fontSize:30,children:["El operador OR har\xe1 lo siguiente:",Object(a.jsxs)(r.l,{children:[Object(a.jsx)(r.j,{fontSize:30,children:"Evaluar\xe1 los operandos de izquierda a derecha."}),Object(a.jsx)(r.j,{fontSize:30,children:"Dependiendo el valor de verdad del operando actual: si el resultado es true, se detiene y retorna el valor original de ese operando."}),Object(a.jsx)(r.j,{fontSize:30,children:"Si se evaluaron todos los operandos (y todos eran False), retorna el \xfaltimo operando."})]})]})]})}),Object(a.jsx)(r.n,{backgroundColor:"#0d0d0d",children:Object(a.jsxs)("div",{className:"flex-center-column",children:[Object(a.jsx)(r.g,{fontSize:50,children:"|| (OR)"}),Object(a.jsx)(r.s,{fontSize:30,children:"Siguiendo el ejemplo anterior..."}),Object(a.jsx)(r.b,{language:"js",children:'\n            let firstName = "";\n            let lastName = "";\n            let nickName = "Bob";\n\n            console.log(firstName || lastName || nickName || "Anonymous"); // Bob\n          '}),Object(a.jsx)("br",{}),Object(a.jsx)(r.b,{language:"js",children:'\n            let groupOne = [];\n            let groupTwo = [];\n\n            console.log(groupOne || groupTwo || ["Bob", "Ana", "Cam"]); // [];\n          '})]})}),Object(a.jsx)(r.n,{backgroundColor:"#0d0d0d",children:Object(a.jsxs)("div",{className:"flex-center-column",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:50,children:"&& (AND)"}),Object(a.jsx)(r.s,{fontSize:30,children:"El operador l\xf3gico AND evalua a True cuando ambos operandos son True. Caso contrario, siempre evalua a False."}),Object(a.jsxs)(r.s,{fontSize:30,children:["En JS la evaluaci\xf3n del AND es de ",Object(a.jsx)("b",{children:"circuito corto"}),"."]}),Object(a.jsx)(r.b,{language:"js",children:"\n            let result = value1 && value2 && value3;\n          "}),Object(a.jsxs)(r.s,{fontSize:30,children:["El operador AND har\xe1 lo siguiente:",Object(a.jsxs)(r.l,{children:[Object(a.jsx)(r.j,{fontSize:30,children:"Evaluar\xe1 los operandos de izquierda a derecha."}),Object(a.jsx)(r.j,{fontSize:30,children:"Dependiendo el valor de verdad del operando actual: si el resultado es false, se detiene y retorna el valor original de ese operando."}),Object(a.jsx)(r.j,{fontSize:30,children:"Si se evaluaron todos los operandos (y todos eran True), retorna el \xfaltimo operando."})]})]})]})}),Object(a.jsx)(r.n,{backgroundColor:"#0d0d0d",children:Object(a.jsxs)("div",{className:"flex-center-column",children:[Object(a.jsx)(r.g,{fontSize:50,children:"&& (AND)"}),Object(a.jsx)(r.s,{fontSize:30,children:"Siguiendo el ejemplo anterior..."}),Object(a.jsx)(r.b,{language:"js",children:'\n            // Si el primer operando es "truthy", el AND retornar\xe1 el segundo operando:\n            console.log(1 && 0); // 0\n            console.log(1 && 5); // 5\n            \n            // Si el primer operando es "falsy", AND lo retorna. El segundo operando es ignorado.\n            console.log(null && 5); // null\n            console.log(0 && "no matter what"); // 0\n          '})]})}),Object(a.jsx)(r.n,{backgroundColor:"#0d0d0d",children:Object(a.jsxs)("div",{className:"flex-center-column",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:50,children:"! (NOT)"}),Object(a.jsx)(r.s,{fontSize:35,children:"El operador l\xf3gico NOT es utilizado para invertir el valor de verdad de un valor cualquiera."}),Object(a.jsxs)(r.l,{children:[Object(a.jsxs)(r.j,{fontSize:30,children:["Convierte el operando a su tipo booleano: ",Object(a.jsx)("b",{children:"true"})," / ",Object(a.jsx)("b",{children:"false"}),"."]}),Object(a.jsx)(r.j,{fontSize:30,children:"Retorna el valor inverso."})]}),Object(a.jsx)(r.b,{language:"js",children:"\n            console.log(!true); // false\n            console.log(!0); // true\n          "}),Object(a.jsx)(r.s,{fontSize:30,children:"Un doble NOT !! se utiliza a veces para convertir valores a su tipo booleano:"}),Object(a.jsx)(r.b,{language:"js",children:'\n            console.log(!!"non-empty string"); // true\n            console.log(!!null); // false\n          '})]})}),Object(a.jsx)(r.n,{backgroundColor:"#0d0d0d",children:Object(a.jsxs)("div",{className:"flex-center-column",children:[Object(a.jsx)(r.g,{fontSize:50,children:"?? (Nullish Coalescing)"}),Object(a.jsxs)(r.s,{fontSize:30,children:["El operador de Nullish Coalescing se escribe con dos signos ",Object(a.jsx)("b",{children:"?"}),". Si evaluamos ",Object(a.jsx)("b",{children:"a ?? b"})," lo que sucede es lo siguiente:",Object(a.jsxs)(r.t,{fontSize:30,children:[Object(a.jsxs)(r.j,{fontSize:30,children:["Si la variable ",Object(a.jsx)("b",{children:"a"})," est\xe1 definida, entonces se devuelve ",Object(a.jsx)("b",{children:"a"})]}),Object(a.jsxs)(r.j,{fontSize:30,children:["Si la variable ",Object(a.jsx)("b",{children:"a"})," no est\xe1 definida, entonces se devuelve ",Object(a.jsx)("b",{children:"b"}),"."]})]})]}),Object(a.jsxs)(r.s,{fontSize:30,children:["Es importante notar que este operador trata a ",Object(a.jsx)("b",{children:"undefined"})," y ",Object(a.jsx)("b",{children:"Null"})," de igual manera, por lo que decimos que una variable esta definida si no es ni undefined ni Null."]}),Object(a.jsx)(r.b,{language:"js",children:'\n            let user;\n\n            console.log(user ?? "Anonymous"); // Anonymous (user not defined)\n          '})]})}),Object(a.jsx)(r.n,{backgroundColor:"#0d0d0d",children:Object(a.jsxs)("div",{className:"flex-center-column",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Estructuras de control"}),Object(a.jsx)(r.s,{fontSize:30,children:"En JavaScript existen 5 estructuras de control b\xe1sicas:"}),Object(a.jsxs)(r.t,{fontSize:30,children:[Object(a.jsx)(r.j,{children:"If / else"}),Object(a.jsx)(r.j,{children:"While"}),Object(a.jsx)(r.j,{children:"Do - while"}),Object(a.jsx)(r.j,{children:"For"}),Object(a.jsx)(r.j,{children:"Switch"})]})]})}),Object(a.jsx)(r.n,{backgroundColor:"#0d0d0d",children:Object(a.jsxs)("div",{className:"flex-center-column",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"If / else"}),Object(a.jsxs)(r.s,{fontSize:30,children:["La sint\xe1xis de la sentencia if es la siguiente (la cl\xe1usula ",Object(a.jsx)("b",{children:"else"})," es opcional):"]}),Object(a.jsx)(r.b,{language:"js",children:"\n            if (condition) {\n              // if block statements\n            } else {\n              // else block statements\n            }\n          "}),Object(a.jsxs)(r.s,{fontSize:30,children:["La sentencia if eval\xfaa la expresi\xf3n entre par\xe9ntesis y luego utiliza el valor de verdad del resultado de dicha evaluaci\xf3n. Por ejemplo, la siguiente condici\xf3n nunca ejecutar\xe1 el bloque de c\xf3digo ",Object(a.jsx)("b",{children:"block1."})]}),Object(a.jsx)(r.b,{language:"js",children:"\n                if (0) { // 0 is a falsy value\n                  // block1\n                }\n              "})]})}),Object(a.jsx)(r.n,{backgroundColor:"#0d0d0d",children:Object(a.jsxs)("div",{className:"flex-center-column",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Conditional operator (?)"}),Object(a.jsxs)(r.s,{fontSize:30,children:["Existe tambi\xe9n el operador condicional ",Object(a.jsx)("b",{children:"?"})," que nos permite escribir una sentencia if de manera mucho m\xe1s corta y simple."]}),Object(a.jsx)(r.b,{language:"js",children:"\n            let result = condition ? value1 : value2;\n          "}),Object(a.jsxs)(r.s,{fontSize:30,children:["En caso que ",Object(a.jsx)("b",{children:"condition"})," evalue a true, entonces se asignar\xe1 ",Object(a.jsx)("b",{children:"value1"})," a la variable ",Object(a.jsx)("b",{children:"result"}),", caso contrario se asignar\xe1 ",Object(a.jsx)("b",{children:"value2"}),"."]})]})}),Object(a.jsx)(r.n,{backgroundColor:"#0d0d0d",children:Object(a.jsxs)("div",{children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Conditional operator (?) (cont...)"}),Object(a.jsxs)(r.s,{fontSize:30,children:["El ",Object(a.jsx)("b",{children:"?"})," puede combinarse m\xfaltiples veces simulando sentencias ",Object(a.jsx)("b",{children:"if/else"}),":"]}),Object(a.jsx)(r.b,{language:"js",children:'\n              let carBrand = "Peugeot";\n\n              let message = (carBrand == "Suzuki") ? "Nice Suzuki!" :\n                (carBrand == "Fiat") ? \'Nice Fiat!\' :\n                (carBrand == "Peugeot") ? \'Nice Peugeot!\' :\n                \'I don\'t know that brand, nice car!\';\n              \n              console.log(message);\n            '})]})}),Object(a.jsx)(r.n,{backgroundColor:"#0d0d0d",children:Object(a.jsxs)("div",{children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"While"}),Object(a.jsxs)(r.s,{fontSize:30,children:["La sint\xe1xis del loop ",Object(a.jsx)("b",{children:"while"})," es la siguiente:"]}),Object(a.jsx)(r.b,{language:"js",children:"\n              while (condition) {\n                // statements\n              }\n            "}),Object(a.jsxs)(r.s,{fontSize:30,children:["El bloque de c\xf3digo que se encuentra dentro del loop while se ejecutar\xe1 mientras la evaluaci\xf3n de la condici\xf3n sea ",Object(a.jsx)("b",{children:"true"}),"."]}),Object(a.jsxs)(r.s,{fontSize:30,children:["Para finalizar la ejecuci\xf3n del loop antes que se cumpla la condici\xf3n podemos utilizar la sentencia ",Object(a.jsx)("b",{children:"break"}),"."]})]})}),Object(a.jsx)(r.n,{backgroundColor:"#0d0d0d",children:Object(a.jsxs)("div",{children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Do - while"}),Object(a.jsx)(r.s,{fontSize:30,children:"El loop do-while es muy similar al loop while, excepto que en este caso primero se ejecuta el bloque de c\xf3digo contenido dentro del mismo y luego se evalua la condici\xf3n. Su sint\xe1xis es la siguiente:"}),Object(a.jsx)(r.b,{language:"js",children:"\n              do {\n                // statements\n              } while (condition);\n            "}),Object(a.jsxs)(r.s,{fontSize:30,children:["Para finalizar la ejecuci\xf3n del loop antes que se cumpla la condici\xf3n podemos utilizar la sentencia ",Object(a.jsx)("b",{children:"break"}),"."]})]})}),Object(a.jsx)(r.n,{backgroundColor:"#0d0d0d",children:Object(a.jsxs)("div",{children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"For"}),Object(a.jsxs)(r.s,{fontSize:30,children:["La sint\xe1xis del loop ",Object(a.jsx)("b",{children:"For"})," es la siguiente:"]}),Object(a.jsx)(r.b,{language:"js",children:"\n              for (begin; condition; step) {\n                // ... loop body ...\n              }\n            "}),Object(a.jsx)(r.s,{fontSize:30,children:"Por ejemplo, para ejecutar un bloque de c\xf3digo 30 veces deber\xedamos declarar la condici\xf3n del for de la siguiente manera:"}),Object(a.jsx)(r.b,{language:"js",children:"\n            for (let i = 0; i < 30; i++) { // shows 0, then 1, then 2\n              console.log(i);\n            }\n          "}),Object(a.jsxs)(r.s,{fontSize:30,children:["Para saltar a la siguiente iteraci\xf3n, podemos utilizar la sentencia ",Object(a.jsx)("b",{children:"continue"})," y para finalizar la ejecuci\xf3n del loop antes que se cumpla la condici\xf3n podemos utilizar la sentencia ",Object(a.jsx)("b",{children:"break"}),"."]})]})}),Object(a.jsx)(r.n,{backgroundColor:"#0d0d0d",children:Object(a.jsxs)("div",{children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"for..in & for..of"}),Object(a.jsxs)(r.s,{fontSize:30,children:["Existen otros tipos de loop ",Object(a.jsx)("b",{children:"for"})," que sirven a distintos casos de uso:"]}),Object(a.jsxs)(r.t,{fontSize:30,children:[Object(a.jsxs)(r.j,{children:["for..in",Object(a.jsxs)(r.s,{fontSize:30,children:["La instrucci\xf3n ",Object(a.jsx)("b",{children:"for ... in"}),' itera sobre todas las propiedades enumerables de un objeto. Generalmente se utiliza para recorrer las "claves" o propiedades de un objeto.']})]}),Object(a.jsxs)(r.j,{children:["for..of",Object(a.jsxs)(r.s,{fontSize:30,children:["La instrucci\xf3n ",Object(a.jsx)("b",{children:"for ... of"})," crea un loop que itera sobre objetos iterables, incluidos: String, Array, objetos similares a arreglos (por ejemplo, argumentos o NodeList), TypedArray, Map, Set e iterables definidos por el usuario."]})]})]})]})}),Object(a.jsx)(r.n,{backgroundColor:"#0d0d0d",children:Object(a.jsxs)("div",{children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Ejemplo de uso for..in"}),Object(a.jsx)(r.b,{language:"js",children:'\n            const car = {\n              brand: "Peugeot",\n              model: "208",\n              year: 2019\n            }\n\n            for (const prop in car) {\n              console.log(prop);\n            }\n\n            // brand\n            // model\n            // year\n          '})]})}),Object(a.jsx)(r.n,{backgroundColor:"#0d0d0d",children:Object(a.jsxs)("div",{children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Ejemplo de uso for..of"}),Object(a.jsx)(r.b,{language:"js",children:"\n            const array1 = ['a', 'b', 'c'];\n\n            for (const element of array1) {\n              console.log(element);\n            }\n            \n            // expected output: \"a\"\n            // expected output: \"b\"\n            // expected output: \"c\"\n          "})]})}),Object(a.jsx)(r.n,{backgroundColor:"#0d0d0d",children:Object(a.jsxs)("div",{children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"for..in vs for..of"}),Object(a.jsx)(r.b,{language:"js",children:'\n            const array1 = [\'a\', \'b\', \'c\'];\n\n            for (const element of array1) {\n              console.log(element);\n            }\n            \n            // expected output: "a"\n            // expected output: "b"\n            // expected output: "c"\n\n            for (const element in array1) {\n              console.log(element);\n            }\n\n            // expected output: "0"\n            // expected output: "1"\n            // expected output: "2"\n          '})]})}),Object(a.jsx)(r.n,{backgroundColor:"#0d0d0d",children:Object(a.jsxs)("div",{children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Switch"}),Object(a.jsxs)(r.s,{fontSize:30,children:["El ",Object(a.jsx)("b",{children:"switch"})," puede utilizarse para reemplazar m\xfaltiples sentencias ",Object(a.jsx)("b",{children:"if"})," y su sint\xe1xis es la siguiente:"]}),Object(a.jsx)(r.b,{language:"js",children:"\n              switch(x) {\n                case 'value1':  // if (x === 'value1')\n                  ...\n                  break; // break clause is optional, in case it's not present, following conditions are evaluated.\n                case 'value2':  // if (x === 'value2')\n                  ...\n                  break;\n                default:\n                  ...\n              }\n            "})]})}),Object(a.jsx)(r.n,{backgroundColor:"#0d0d0d",children:Object(a.jsxs)("div",{children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Manejo de errores"}),Object(a.jsxs)(r.s,{fontSize:30,children:["JavaScript nos provee los bloques ",Object(a.jsx)("b",{children:"try..catch"})," para capturar errores en tiempo de ejecuci\xf3n que pueden provocar la finalizaci\xf3n de nuestro script."]}),Object(a.jsx)(r.b,{language:"js",children:"\n              try {\n                null = \"this is a null variable\";\n              } catch (err) {\n                console.log(err); // Syntax Error\n                console.log('Hey! Something went wrong...');\n              }\n            "}),Object(a.jsxs)(r.s,{fontSize:30,children:["Como se puede ver en el snippet anterior, el bloque catch recibe siempre un objeto error como par\xe1metro. Este objeto error tiene 2 propiedades principales:",Object(a.jsxs)(r.t,{fontSize:30,children:[Object(a.jsx)(r.j,{children:"name: el nombre del error (SyntaxError, TypeError, etc...)"}),Object(a.jsx)(r.j,{children:"message: un mensaje descriptivo que brinda un poco (no tanto) m\xe1s de detalle sobre el error"})]})]})]})}),Object(a.jsx)(r.n,{backgroundColor:"#0d0d0d",children:Object(a.jsxs)("div",{children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Manejo de errores (cont.)"}),Object(a.jsxs)(r.s,{fontSize:30,children:["Si no necesitamos detalles sobre el error podemos ",Object(a.jsx)("b",{children:"omitir el par\xe1metro error en el bloque catch. "}),"Adem\xe1s, pueden existir casos donde deseemos lanzar un error de manera intencional por comportamiento imprevisto en el c\xf3digo. Para esto utilizamos la palabra clave ",Object(a.jsx)("b",{children:"throw"}),"."]}),Object(a.jsx)(r.b,{language:"js",children:'\n              let json = \'{ "age": 30 }\'; // incomplete data\n\n              try {\n                let user = JSON.parse(json); // <-- no errors\n                if (!user.name) {\n                  throw new SyntaxError("Incomplete data: no name");\n                }\n                console.log(user.name);\n              } catch (err) {\n                console.log("JSON Error: " + err.message); // JSON Error: Incomplete data: no name\n              }\n            '})]})}),Object(a.jsx)(r.n,{backgroundColor:"#0d0d0d",children:Object(a.jsxs)("div",{children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Manejo de errores (cont.)"}),Object(a.jsx)(r.s,{fontSize:30,children:"Para lanzar errores propios JavaScript nos provee varios constructores para errores com\xfanes: Error, SyntaxError, ReferenceError, TypeError y otros. Su sint\xe1xis es la siguiente:"}),Object(a.jsx)(r.b,{language:"js",children:"\n              let error = new Error(message);\n              // or\n              let error = new SyntaxError(message);\n              let error = new ReferenceError(message);\n              // ...\n            "}),Object(a.jsxs)(r.s,{fontSize:30,children:["En estos casos, la propiedad ",Object(a.jsx)("b",{children:"name"})," tendr\xe1 como valor el nombre del constructor (ej. SyntaxError) y la propiedad ",Object(a.jsx)("b",{children:"message"})," tendr\xe1 como valor lo que hayamos pasado como par\xe1metro al constructor."]})]})}),Object(a.jsx)(r.n,{backgroundColor:"#0d0d0d",children:Object(a.jsxs)("div",{children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Manejo de errores (cont.)"}),Object(a.jsxs)(r.s,{fontSize:30,children:["Los bloques ",Object(a.jsx)("b",{children:"try..catch"})," pueden contar con una cl\xe1usula extra (opcional) llamada ",Object(a.jsx)("b",{children:"finally"}),". Si est\xe1 presente, el c\xf3digo contenido dentro de ese bloque se ejecutar\xe1 siempre:",Object(a.jsxs)(r.t,{fontSize:30,children:[Object(a.jsxs)(r.j,{children:["Despu\xe9s del ",Object(a.jsx)("b",{children:"try"})," si no hubo errores."]}),Object(a.jsxs)(r.j,{children:["Despu\xe9s del ",Object(a.jsx)("b",{children:"catch"})," si hubo errores."]})]})]}),Object(a.jsx)(r.b,{language:"js",children:"\n              try {\n                ... try to execute the code ...\n             } catch (err) {\n                ... handle errors ...\n             } finally {\n                ... execute always ...\n             }\n            "})]})}),Object(a.jsx)(r.n,{backgroundColor:"#0d0d0d",children:Object(a.jsxs)("div",{children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Creando nuestro propio error"}),Object(a.jsxs)(r.s,{fontSize:30,children:["Cuando estamos desarrollando es probable que querramos tener nuestras propias clases de errores para reflejar situaciones espec\xedficas que pueden fallar durante la ejecuci\xf3n de nuestros programas. Para esto, JavaScript nos permite definir clases que extienden de la clase base ",Object(a.jsx)("b",{children:"Error"}),"."]}),Object(a.jsx)(r.b,{language:"js",children:'\n            class ValidationError extends Error {\n              constructor(message) {\n                super(message); // (1)\n                this.name = "ValidationError"; // (2)\n              }\n            }\n          \n            function test() {\n              throw new ValidationError("Whoops!");\n            }\n          '})]})}),Object(a.jsx)(r.n,{backgroundColor:"#0d0d0d",children:Object(a.jsxs)("div",{children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Creando errores custom (cont.)"}),Object(a.jsxs)(r.s,{fontSize:30,children:["En el ejemplo anterior, definimos un nuevo tipo de error para reflejar fallos en validaciones. Si bien al extender de la clase ",Object(a.jsx)("b",{children:"Error"})," nuestra clase hereda las 3 propiedades b\xe1sicas ",Object(a.jsx)("b",{children:"message, name y stack"}),", podriamos definir todas las props extras que querramos."]}),Object(a.jsx)(r.b,{language:"js",children:'\n            class HttpError extends Error {\n              constructor(message, statusCode) {\n                super(message); // (1)\n                this.name = "HttpError"; // (2)\n                this.statusCode = statusCode;\n              }\n            }\n          \n            function test() {\n              throw new HttpError("User not found", 404);\n            }\n          '})]})}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Funciones"}),Object(a.jsx)(r.s,{fontSize:30,children:"Javascript nos permite definir funciones para modularizar y evitar repetir nuestro c\xf3digo."}),Object(a.jsxs)(r.s,{fontSize:30,children:["Para esto, podemos utilizar la palabra clave ",Object(a.jsx)("b",{children:"function"}),"."]}),Object(a.jsx)(r.b,{language:"js",children:'\n          function myFunction(arg_1, arg_2) {\n            console.log("This is a function with two arguments!")\n          }\n        '})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Funciones"}),Object(a.jsx)(r.s,{fontSize:30,children:"En caso de pasar un par\xe1metro de tipo primitivo, por ejemplo un n\xfamero, este par\xe1metro ser\xe1 pasado por valor."}),Object(a.jsx)(r.s,{fontSize:30,children:"En caso de pasar un objeto o array por par\xe1metro, \xe9ste ser\xe1 pasado por referencia."}),Object(a.jsx)(r.b,{language:"js",children:"\n          function myFunction(theObject) {\n            theObject.brand = 'Toyota';\n          }\n\n          let mycar = { brand: 'Honda', model: 'Accord', year: 1998 };\n          console.log(mycar.brand); // \"Honda\"\n\n          myFunc(mycar);\n          console.log(mycar.brand); // \"Toyota\"\n        "})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Expresiones"}),Object(a.jsxs)(r.s,{fontSize:30,children:["Las funciones tambi\xe9n pueden ser definidas como ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/function",children:"expresiones"}),"."]}),Object(a.jsx)(r.s,{fontSize:30,children:"Podemos definir funciones an\xf3nimas, sin proveer un nombre en su declaraci\xf3n."}),Object(a.jsx)(r.b,{language:"js",children:"\n          // This is an expression.\n          const square = function square(number) { return number * number }\n\n          // This is an anonymous function declared as an expression.\n          const square2 = function(number) { return number * number }\n        "})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Lexical scoping"}),Object(a.jsx)(r.s,{fontSize:30,children:"En JavaScript una funci\xf3n puede definirse dentro de otra. De esta forma, la funci\xf3n de adentro tiene acceso al contexto de la funci\xf3n que la contiene, pudiendo acceder a todo lo que est\xe1 en su alcance."}),Object(a.jsx)(r.b,{language:"js",children:"\n          function init() {\n            var name = 'Mozilla'; // name is a local variable created by init\n            function displayName() { // displayName() is the inner function, a closure\n              console.log(name); // use variable declared in the parent function\n            }\n            displayName();\n          }\n          init();\n        "})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Closures"}),Object(a.jsx)(r.s,{fontSize:30,children:"Un closure es la combinaci\xf3n de una funci\xf3n y el entorno l\xe9xico dentro del cual se declar\xf3 esa funci\xf3n. Este entorno consta de las variables locales que estaban dentro del alcance en el momento en que se cre\xf3 el closure."}),Object(a.jsx)(r.b,{language:"js",children:"\n          function makeFunc() {\n            var name = 'Mozilla';\n            function displayName() {\n              console.log(name);\n            }\n            return displayName;\n          }\n\n          var myFunc = makeFunc();\n          myFunc();\n        "}),Object(a.jsxs)(r.k,{children:[Object(a.jsx)("p",{children:"En este ejemplo, la funci\xf3n makeFunc no retorna un valor sino que retorna displayName, que es la funci\xf3n que se define dentro de makeFunc."}),Object(a.jsx)("p",{children:"Debido a que la funci\xf3n displayName utiliza una variable local a makeFunc, al invocarla luego displayName sigue mostrando el nombre Mozilla, a pesar de que ese valor ya no forme parte del contexto de ejecuci\xf3n (form\xf3 parte del contexto de declaraci\xf3n)."})]})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsxs)("div",{style:{width:"80%"},children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Hoisting"}),Object(a.jsx)(r.s,{fontSize:30,children:"Si bien el c\xf3digo en JS se ejecuta de manera secuencial (se ejecuta una l\xednea y al terminar se ejecuta la que est\xe1 debajo), el motor de JS procesa la declaraci\xf3n de funciones y variables previo a la ejecuci\xf3n del c\xf3digo."}),Object(a.jsxs)(r.s,{fontSize:30,children:["Para obtener m\xe1s informaci\xf3n, ver ",Object(a.jsx)("a",{href:"https://www.javascripttutorial.net/javascript-execution-context/",children:"Javascript execution Context"}),"."]}),Object(a.jsxs)(r.d,{justifyContent:"space-between",children:[Object(a.jsx)(r.b,{language:"js",children:'\n              catName("Chloe");\n\n              function catName(name) {\n                console.log("My cat\'s name is " + name);\n              }\n            '}),Object(a.jsx)("iframe",{src:"".concat("/js-training-classes","/snippets/class1/hoisting1.html")})]})]}),Object(a.jsx)(r.k,{children:'Podr\xedamos pensar como que JS "mueve las declaraciones de variables y funciones al principio de los archivos" y por eso \xe9stas pueden ser utilizadas previo a su declaraci\xf3n.'})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Hoisting"}),Object(a.jsx)(r.s,{fontSize:30,children:'El hoisting de funciones, solo funciona con "function declarations" y no con "function expressions".'}),Object(a.jsx)(r.b,{language:"js",children:"\n          console.log(square);    // square is hoisted with an initial value undefined.\n          console.log(square(5)); // Uncaught TypeError: square is not a function\n\n          const square = function(n) {\n            return n * n;\n          }\n        "})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsxs)("div",{style:{width:"80%"},children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Hoisting"}),Object(a.jsxs)(r.s,{fontSize:30,children:["En el caso de las variables definidas con ",Object(a.jsx)("b",{children:"var"}),", \xe9stas ser\xe1n declaradas e inicializadas con el valor ",Object(a.jsx)("b",{children:"undefined"}),"."]}),Object(a.jsxs)(r.s,{fontSize:30,children:["En el caso de variables definidas con ",Object(a.jsx)("b",{children:"let"})," o constantes utilizando ",Object(a.jsx)("b",{children:"const"}),", cualquier referencia a ellas previa a la l\xednea donde son declaradas lanzar\xe1 una excepci\xf3n."]}),Object(a.jsxs)(r.d,{justifyContent:"space-between",children:[Object(a.jsx)(r.b,{language:"js",children:"\n              console.log(num_var); // Returns 'undefined' from hoisted var declaration (not 6)\n              var num_var; // Declaration\n              num_var = 6; // Initialization\n\n              console.log(num_const) // ReferenceError\n              console.log(num_let) // ReferenceError\n              const num_const = 6;\n              let num_let;\n            "}),Object(a.jsx)("iframe",{src:"".concat("/js-training-classes","/snippets/class1/hoisting2.html")})]})]}),Object(a.jsx)(r.k,{children:'El motor de JavaScript solo hace el "hoisting" de la declaraci\xf3n de las variables, es decir que no tiene en cuenta su inicializaci\xf3n.'})]}),Object(a.jsx)(r.n,{backgroundColor:"#0d0d0d",children:Object(a.jsxs)("div",{children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Bloques"}),Object(a.jsxs)(r.s,{fontSize:30,children:["Los bloques se utilizan para agrupar cero o m\xe1s sentencias y est\xe1n delimitados por llaves ","{"," ","}",". Por ejemplo, las sentencias if y los loops vistos declaran un bloque para agrupar a las sentencias afectadas."]}),Object(a.jsx)(r.b,{language:"js",children:"\n            var x = 1;\n            let y = 1;\n            \n            if (true) {  // start of the block\n              var x = 2;\n              let y = 2;\n            }            // end of the block\n            \n            console.log(x); // expected output: 2\n\n            console.log(y); // expected output: 1\n          "})]})}),Object(a.jsx)(r.n,{backgroundColor:"#0d0d0d",children:Object(a.jsxs)("div",{children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Alcance de las variables"}),Object(a.jsxs)(r.s,{fontSize:30,children:["El alcance de una variable hace referencia a la regi\xf3n del programa donde la misma puede utilizarse. En JavaScript los distintos tipos de variables vistos (var, let y const) tienen distintos alcances.",Object(a.jsxs)(r.t,{fontSize:30,children:[Object(a.jsxs)(r.j,{children:[Object(a.jsx)("b",{children:"var:"}),' podemos decir que tiene alcance "global".']}),Object(a.jsxs)(r.j,{children:[Object(a.jsx)("b",{children:"let y const:"})," podemos decir que ambas tienen alcance de bloque. Las variables declaradas con let y const podr\xe1n ser referenciadas dentro del bloque en que fueron declaradas."]})]})]})]})}),Object(a.jsx)(r.n,{backgroundColor:"#0d0d0d",children:Object(a.jsxs)("div",{children:[Object(a.jsxs)(r.g,{margin:"0px",fontSize:"50px",children:["Temporal Dead Zone ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/let#temporal_dead_zone_tdz",children:"(TDZ)"})]}),Object(a.jsxs)(r.s,{fontSize:30,children:["Las variables declaradas con ",Object(a.jsx)("b",{children:"let"})," no pueden ser accedidas ni escritas hasta que hayan sido completamente inicializadas, lo cual sucede en la declaraci\xf3n de las mismas. Acceder a esa variable antes de haber sido inicializada resultar\xe1 en ",Object(a.jsx)("b",{children:"ReferenceError."})]}),Object(a.jsx)(r.s,{fontSize:30,children:'Se dice que la variable est\xe1 en una "zona muerta temporal" desde el inicio del bloque hasta que la inicializaci\xf3n de la misma se haya completado.'}),Object(a.jsx)(r.b,{language:"js",children:"\n            { // TDZ starts at beginning of scope\n              console.log(bar); // undefined\n              console.log(foo); // ReferenceError\n              var bar = 1;\n              let foo = 2; // End of TDZ (for foo)\n            }\n          "})]})}),Object(a.jsx)(r.n,{backgroundColor:"#0d0d0d",children:Object(a.jsxs)("div",{children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Alcance de las variables (cont.)"}),Object(a.jsx)(r.b,{language:"js",children:"\n            var x = 1;\n            {\n              var x = 2;\n            }\n            console.log(x); // logs 2\n\n            let x = 1;\n            {\n              let x = 2;\n            }\n            console.log(x); // logs 1\n          "})]})}),Object(a.jsx)(r.n,{backgroundColor:"#0d0d0d",children:Object(a.jsxs)("div",{children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Alcance dentro de funciones"}),Object(a.jsx)(r.s,{fontSize:30,children:"Las variables declaradas dentro de una funci\xf3n no pueden ser accedidas fuera de la misma. Sin embargo, una funci\xf3n SI puede acceder a todas las variables declaradas dentro del alcance donde la funci\xf3n misma fue declarada."})]})}),Object(a.jsx)(r.n,{backgroundColor:"#0d0d0d",children:Object(a.jsxs)("div",{style:{width:"80%"},children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Alcance dentro de funciones (cont.)"}),Object(a.jsxs)("div",{style:{display:"flex"},children:[Object(a.jsx)(r.b,{language:"js",children:"\n              // The following variables are defined in the global scope\n              var num1 = 10,\n                  num2 = 5,\n                  name = 'Juan';\n\n              // A nested function example\n              function getScore() {\n                var num1 = 2,\n                    num2 = 3;\n                  \n                function add() {\n                  return name + ' scored ' + (num1 + num2);\n                }\n\n                return add();\n              }\n\n              getScore();\n            "}),Object(a.jsx)("iframe",{src:"".concat("/js-training-classes","/snippets/class1/scopes2.html")})]})]})}),Object(a.jsx)(r.n,{backgroundColor:"#0d0d0d",children:Object(a.jsxs)("div",{style:{width:"80%"},children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Alcance dentro de funciones (cont.)"}),Object(a.jsxs)("div",{style:{display:"flex"},children:[Object(a.jsx)(r.b,{language:"js",children:"\n            function addFive(num) {\n                var numberFive = 5;\n                return num + numberFive;\n            }\n\n            addFive(3); // expected output: 8\n\n            console.log(numberFive);\n            "}),Object(a.jsx)("iframe",{src:"".concat("/js-training-classes","/snippets/class1/scopes1.html")})]})]})}),Object(a.jsx)(r.n,{backgroundColor:"#0d0d0d",children:Object(a.jsxs)("div",{children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Alcance de declaraciones de funciones"}),Object(a.jsx)(r.s,{fontSize:30,children:"Las declaraciones de funciones son siempre locales al alcance actual. Esto quiere decir que si son definidas en el contexto global, ser\xe1n alcanzables por todo el script, y si son definidas dentro de otro bloque seran solo alcanzables dentro de ese bloque."}),Object(a.jsx)(r.b,{language:"js",children:"\n            // global scope\n\n            // foo is a global function\n            function foo() {\n                // bar is local to foo\n                function bar() {\n                }\n            }\n          "})]})}),Object(a.jsx)(r.n,{backgroundColor:"#0d0d0d",children:Object(a.jsxs)("div",{children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Operador typeof"}),Object(a.jsxs)(r.s,{fontSize:30,children:["Para inspeccionar el tipo de un valor podemos utilizar el operador ",Object(a.jsx)("b",{children:"typeof"}),". Este operador retorna el tipo de un valor en formato string. Puede utilizarse con o sin par\xe9ntesis alrededor del valor por el cual se est\xe1 consultando:",Object(a.jsx)("strong",{style:{color:"lightseagreen"},children:" typeof(true)"})," \xf3 ",Object(a.jsx)("strong",{style:{color:"lightseagreen"},children:"typeof false"}),"."]}),Object(a.jsx)(r.b,{language:"js",children:"\n            typeof(false);              // expected output: \u201cboolean\u201d\n            typeof({});                 // expected output: \u201cobject\u201d\n            typeof(1);                  // expected output: \u201cnumber\u201d\n\n            let aString = \u201cUn string\u201d;\n            typeof(aString);            // expected output: \u201cstring\u201d\n\n            typeof([]);                 // expected output: ???\n            typeof(null);               // expected output: ???\n            typeof(undefined);          // expected output: ???\n            typeof(function hey(){});   // expected output: ???\n          "})]})}),Object(a.jsx)(r.n,{backgroundColor:"#0d0d0d",children:Object(a.jsxs)("div",{children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"CodeSandbox"}),Object(a.jsx)(r.s,{className:"flex-center-column",fontSize:30,children:Object(a.jsx)("a",{href:"https://codesandbox.io/s/boring-haze-h36gd?file=/src/index.js:168-247",children:"Ejercicios"})})]})})]})}},54:function(e,n,s){"use strict";s.r(n);s(2),s(40);var r=s(16),a=s(0);n.default=function(){return Object(a.jsxs)(a.Fragment,{children:[Object(a.jsx)(r.Agenda,{}),Object(a.jsx)(r.BuiltInFunctions,{}),Object(a.jsx)(r.DomIntro,{}),Object(a.jsx)(r.WindowAPI,{}),Object(a.jsx)(r.Debugger,{}),Object(a.jsx)(r.Callbacks,{}),Object(a.jsx)(r.Events,{}),Object(a.jsx)(r.Exercises,{})]})}},55:function(e,n,s){"use strict";s.r(n);s(2);var r=s(1),a=s(0);n.default=function(){return Object(a.jsx)(a.Fragment,{children:Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",className:"flex-center-column",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Agenda"}),Object(a.jsxs)(r.l,{children:[Object(a.jsx)(r.j,{children:"Funciones built-in"}),Object(a.jsx)(r.j,{children:"Introducci\xf3n al DOM"}),Object(a.jsx)(r.j,{children:"Window API"}),Object(a.jsx)(r.j,{children:"Debugging"}),Object(a.jsx)(r.j,{children:"Callbacks"}),Object(a.jsx)(r.j,{children:"Eventos"}),Object(a.jsx)(r.j,{children:"Ejercicios"})]})]})})}},56:function(e,n,s){"use strict";s.r(n);s(2);var r=s(1),a=s(0);n.default=function(){return Object(a.jsxs)(a.Fragment,{children:[Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Number.parseInt"}),Object(a.jsxs)(r.s,{fontSize:30,children:[Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/parseInt",children:"parseInt"})," es una funci\xf3n que recibe un string (si no es un string lo convierte) y retorna un entero (o NaN). Adem\xe1s recibe como segundo par\xe1metro la base en la que dicho n\xfamero est\xe1 representado."]}),Object(a.jsx)(r.s,{fontSize:30,children:Object(a.jsx)("a",{href:"https://thisthat.dev/number-constructor-vs-parse-int/",children:"Number() vs parseInt()"})}),Object(a.jsx)(r.b,{language:"js",children:"\n          parseInt('0xF', 16)\n          parseInt('F', 16)\n          parseInt('17', 8)\n          parseInt(021, 8)\n          parseInt('015', 10)\n          parseInt(15.99, 10)\n          parseInt('1111', 2)\n          parseInt('15 * 3', 10)\n          parseInt('15e2', 10)\n          parseInt('15px', 10)\n\n          parseInt('Hello', 8) // Not a number at all\n          parseInt('546', 2)   // Digits other than 0 or 1 are invalid for binary radix\n        "}),Object(a.jsx)(r.k,{children:"Recordar que el tipo primitivo Number tambi\xe9n incluye la representaci\xf3n de n\xfameros flotantes, y la funci\xf3n parseInt retorna siempre n\xfameros enteros. Adem\xe1s permite transformar n\xfameros que poseen distinta base."})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Number.parseFloat"}),Object(a.jsxs)(r.s,{fontSize:30,children:[Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/parseFloat",children:"parseFloat"})," es una funci\xf3n que recibe un string (si no es un string lo convierte) y retorna un n\xfamero flotante (o NaN)."]}),Object(a.jsx)(r.b,{language:"js",children:"\n          parseFloat(3.14);\n          parseFloat('3.14');\n          parseFloat('  3.14  ');\n          parseFloat('314e-2');\n          parseFloat('0.0314E+2');\n          parseFloat('3.14some non-digit characters');\n\n          parseFloat('FF2'); // NaN\n          parseFloat(900719925474099267n); // lose precision as the integer is too large to be represented as a float\n        "})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"isNaN / Number.isNaN"}),Object(a.jsxs)(r.s,{fontSize:30,children:[Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/isNaN",children:"isNaN"})," es una funci\xf3n que permite determinar si un valor es ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",children:"NaN"}),". Cuando el argumento pasado a esta funci\xf3n no es de tipo Number, primero se convierte a Number. Este compartamiento puede generar algunos casos especiales donde la funci\xf3n devuelve valores inesperados."]}),Object(a.jsxs)(r.s,{fontSize:30,children:["Por este motivo, en ECMAScript 2015 se define la funci\xf3n ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN",children:"Number.isNaN"}),", la cual sirve para determinar si el par\xe1metro recibido es NaN y es de tipo Number."]}),Object(a.jsx)(r.b,{language:"js",children:"\n          Number('false') // NaN.\n\n          isNaN(\"false\") // true because Number('false') returns NaN.\n\n          Number.isNaN(\"false\") // false because 'false' is not a Number.\n        "})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"String.localeCompare"}),Object(a.jsxs)(r.s,{fontSize:30,children:[Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/localeCompare",children:"localeCompare"})," es una funci\xf3n que retorna un n\xfamero entero indicando si un string est\xe1 antes, despues o es igual a otro."]}),Object(a.jsx)(r.b,{language:"js",children:"\n          // The letter \"a\" is before \"c\" yielding a negative value\n          'a'.localeCompare('c'); // -2 or -1 (or some other negative value)\n\n          // Alphabetically the word \"check\" comes after \"against\" yielding a positive value\n          'check'.localeCompare('against'); // 2 or 1 (or some other positive value)\n\n          // \"a\" and \"a\" are equivalent yielding a neutral value of zero\n          'a'.localeCompare('a'); // 0\n\n          // Sort an array\n          let items = ['r\xe9serv\xe9', 'Premier', 'Clich\xe9', 'communiqu\xe9', 'caf\xe9', 'Adieu'];\n          items.sort( (a, b) => a.localeCompare(b, 'fr', {ignorePunctuation: true}));\n          // ['Adieu', 'caf\xe9', 'Clich\xe9', 'communiqu\xe9', 'Premier', 'r\xe9serv\xe9']\n        "})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Object methods"}),Object(a.jsx)(r.s,{fontSize:30,children:"El tipo Object provee una gran variedad de m\xe9todos que podemos utilizar para recorrerlo, copiarlo, filtrar sus claves, etc."}),Object(a.jsxs)(r.t,{fontSize:30,children:[Object(a.jsxs)(r.j,{children:[Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/entries",children:"Object.entries"})," retorna un array de arrays. Permite recorrer un objeto iterando por sus claves y valores."]}),Object(a.jsxs)(r.j,{children:[Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys",children:"Object.keys"})," retorna un array con las claves de un objeto."]}),Object(a.jsxs)(r.j,{children:[Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values",children:"Object.values"})," retorna un array con los valores de un objeto."]}),Object(a.jsxs)(r.j,{children:[Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign",children:"Object.assign"})," copia todas las propiedades enumerables de uno o m\xe1s objetos en otro."]})]})]})]})}},57:function(e,n,s){"use strict";s.r(n);s(2);var r=s(1),a=s(0);n.default=function(){return Object(a.jsxs)(a.Fragment,{children:[Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Document Object Model (DOM)"}),Object(a.jsxs)(r.s,{fontSize:30,children:[Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model/Introduction",children:"DOM"})," es una interfaz de programaci\xf3n para documentos HTML y XML."]}),Object(a.jsx)(r.s,{fontSize:30,children:"Es una representaci\xf3n orientada a objetos de una p\xe1gina web. Representa a los documentos como nodos y objetos, y permite alterar su estructura, estilo y contenido program\xe1ticamente."}),Object(a.jsx)(r.s,{fontSize:30,children:"El DOM fue dise\xf1ado para ser independiente de cualquier lenguaje de programaci\xf3n. Es muy com\xfan ver o hablar de manipular el DOM con JS, pero podr\xeda hacerse tambien con Python por ejemplo."})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Document API"}),Object(a.jsxs)(r.s,{fontSize:30,children:["La ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/API/Document",children:"document API"})," es implementada por los navegadores web para permitirnos interactuar con el DOM."]}),Object(a.jsx)(r.s,{fontSize:30,children:"No se requiere la instalaci\xf3n de ninguna librer\xeda o herramienta. Con el simple hecho de incluir nuestro c\xf3digo JS dentro de la p\xe1gina HTML, ya tenemos acceso a esta API."}),Object(a.jsx)(r.b,{language:"html",children:'\n          <html>\n            <head>\n              <script>\n                // create a couple of elements in an empty HTML page\n                const heading = document.createElement("h1");\n                const heading_text = document.createTextNode("Big Head!");\n                heading.appendChild(heading_text);\n                document.body.appendChild(heading);\n              <\/script>\n            </head>\n            <body>\n            </body>\n          </html>\n        '})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"<\/script>"}),Object(a.jsxs)(r.s,{fontSize:30,children:["El tag ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script",children:"script"})," se utiliza para embeber datos o c\xf3digo, generalmente JS."]}),Object(a.jsx)(r.s,{fontSize:30,children:"A este tag podemos pasarle un conjunto de atributos que permiten realizar cosas como cargar un script de manera asincr\xf3nica, ejecutar el script ni bien el documento es cargado, etc."}),Object(a.jsxs)(r.s,{fontSize:30,children:["El atributo m\xe1s com\xfan es ",Object(a.jsx)("b",{children:"src"}),", que usaremos para indicarle a JavaScript la ubicaci\xf3n de nuestro script a cargar en el documento HTML."]}),Object(a.jsx)(r.b,{language:"html",children:'\n          <script src="myScript.js"><\/script>\n        '})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Node"}),Object(a.jsxs)(r.s,{fontSize:30,children:[Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/API/Node",children:"Node"})," es una clase abstracta en la que se basan muchos otros objetos de la DOM API."]}),Object(a.jsxs)(r.s,{fontSize:30,children:["Todo elemento dentro del documento es un nodo de alg\xfan tipo. Puede ser, por ejemplo, un ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/API/Element",children:"Element node"}),", Text node o Attribute node. Incluso ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/API/Document",children:"Document"})," extiende de esta clase."]}),Object(a.jsxs)(r.s,{fontSize:30,children:["Esta clase posee una gran cantidad de ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/API/Node#methods",children:"m\xe9todos"})," que podemos utilizar para manipular el documento entero, incluso obtener otros nodos a partir de uno (sus hijos, hermanos, padre, etc.)."]})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Element"}),Object(a.jsxs)(r.s,{fontSize:30,children:[Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/API/Element",children:"Element"})," es la clase base de la que todos los objetos en el documento heredan. Son objetos que representan elementos."]}),Object(a.jsx)(r.s,{fontSize:30,children:"Tambi\xe9n posee una gran cantidad de m\xe9todos y atributos. Es el objeto m\xe1s com\xfan con el que vamos a interactuar al manipular el DOM."}),Object(a.jsx)(r.b,{language:"js",children:"\n          // search for an element by id\n          const element = document.getElementById('item');\n          // or\n          const element = document.querySelector('#item');\n\n          if (element.className === 'active'){\n            element.className = 'inactive';\n          } else {\n            element.className = 'active';\n          }\n        "})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"HTML global attributes"}),Object(a.jsxs)(r.s,{fontSize:30,children:["Son ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes#list_of_global_attributes",children:"atributos comunes a todos los elementos HTML"}),", aunque puede que no tengan efecto sobre algunos."]}),Object(a.jsxs)(r.s,{fontSize:30,children:["Algunos ejemplos com\xfanes son ",Object(a.jsx)("b",{children:Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes#attr-class",children:"class"})})," que permite a CSS y JS acceder al elemento, ",Object(a.jsx)("b",{children:Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes#attr-style",children:"style"})})," que personaliza el CSS de ese elemento en particular, ",Object(a.jsx)("b",{children:Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes#attr-id",children:"id"})})," que asigna un identificador \xfanico al elemento, entre otros."]}),Object(a.jsxs)(r.s,{fontSize:30,children:["Podemos obtener, modificar o borrar cualquier atributo de los elementos HTML utilizando ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute",children:"element.setAttribute"}),", ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute",children:"element.getAttribute"})," y ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute",children:"element.removeAttribute"})]})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Cambiar estilos de un elemento"}),Object(a.jsxs)(r.d,{justifyContent:"space-between",style:{width:"80%"},children:[Object(a.jsx)(r.b,{language:"html",children:'\n            <body>\n              <button id="btn">Cambiar color</button>\n              \n              <p id="paragraph">\n                Contiene texto <b style="color: red;">Rojo</b>\n              </p>\n              \n              <script>\n                const coloredElem = document.querySelector("#paragraph b");\n            \n                function clickHandler() {\n                  coloredElem.style.color = "green"\n                  coloredElem.innerHTML = "Verde";\n                };\n            \n                document.querySelector("#btn").addEventListener("click", clickHandler);\n              <\/script>\n            </body>\n          '}),Object(a.jsx)("iframe",{src:"".concat("/js-training-classes","/snippets/class2/changeStyles.html")})]})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Cambiar clase de un elemento"}),Object(a.jsxs)(r.d,{justifyContent:"space-between",style:{width:"80%"},children:[Object(a.jsx)(r.b,{language:"html",children:'\n            <body>\n              <button id="btn">Cambiar color</button>\n              \n              <p>\n                Contiene texto <b class="coloredText coloredTextRed">Rojo</b>\n              </p>\n              \n              <script>\n                const coloredElem = document.querySelector(".coloredText");\n            \n                function clickHandler() {\n                  if (coloredElem.classList.contains(\'coloredTextRed\')) {\n                    coloredElem.classList.add(\'coloredTextGreen\');\n                    coloredElem.classList.remove(\'coloredTextRed\');\n                    coloredElem.innerHTML = "Verde";\n                  } else {\n                    coloredElem.classList.add(\'coloredTextRed\');\n                    coloredElem.classList.remove(\'coloredTextGreen\');\n                    coloredElem.innerHTML = "Rojo";\n                  }\n                };\n            \n                document.querySelector("#btn").addEventListener("click", clickHandler);\n              <\/script>\n            </body>\n          '}),Object(a.jsx)("iframe",{src:"".concat("/js-training-classes","/snippets/class2/changeClass.html")})]})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"InnerHTML y outerHTML"}),Object(a.jsx)(r.s,{fontSize:30,children:"Atributos de Element que nos permiten obtener una representaci\xf3n del elemento o modificarlo. Ambos atributos nos permiten obtener un string con la representaci\xf3n HTML del elemento."}),Object(a.jsxs)(r.s,{fontSize:30,children:["La diferencia b\xe1sica es que ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/API/Element/innerHTML",children:"innerHTML"})," nos devuelve la representaci\xf3n de los elementos descendientes, mientras que ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/API/Element/outerHTML",children:"outerHTML"})," tambi\xe9n devuelve el elemento mismo como parte de la presentaci\xf3n. Lo mismo sucede al intentar modificar estos atributos. Si utilizamos ",Object(a.jsx)("b",{children:"innerHTML"})," solo sobreescribiremos el contenido del elemento, mientras que si usamos ",Object(a.jsx)("b",{children:"outerHTML"})," tambi\xe9n estar\xedamos sobreescribiendo el elemento mismo."]}),Object(a.jsx)(r.b,{language:"js",children:'\n          // <p id="example">Paragraph</p>\n\n          const elem = document.querySelector(#example);\n          console.log(elem.innerHTML); // "Paragraph"\n          console.log(elem.outerHTML); // <p id="example">Paragraph</p>\n        '})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Buscar elementos"}),Object(a.jsx)(r.s,{fontSize:30,children:"Existe una gran variedad de m\xe9todos para obtener elementos del DOM. Notar que algunos devuelven un \xfanico elemento mientras que otros devuelven una colecci\xf3n (array). Algunos ejemplos:"}),Object(a.jsxs)(r.t,{fontSize:30,children:[Object(a.jsx)(r.j,{children:Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector",children:"document.querySelector"})}),Object(a.jsx)(r.j,{children:Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelectorAll",children:"document.querySelectorAll"})}),Object(a.jsx)(r.j,{children:Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/API/Element/getElementsByClassName",children:"document.getElementsByClassName"})}),Object(a.jsx)(r.j,{children:Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementById",children:"document.getElementById"})}),Object(a.jsx)(r.j,{children:Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/API/Element/getElementsByTagName",children:"document.getElemenstByTagName"})})]})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Creaci\xf3n de nuevos elementos"}),Object(a.jsxs)(r.s,{fontSize:30,children:["Utilizando la document API, podemos crear nuevos elementos HTML, los cuales podemos luego agregar al documento. Para esto debemos usar la funcion ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/API/Document/createElement",children:"document.createElement"}),"."]}),Object(a.jsx)(r.b,{language:"js",children:'\n          function addElement () {\n            // create a new div element\n            const newDiv = document.createElement("div");\n\n            // and give it some content\n            const newContent = document.createTextNode("Hi there and greetings!");\n\n            // add the text node to the newly created div\n            newDiv.appendChild(newContent);\n\n            // add the newly created element and its content into the DOM\n            document.body.appendChild(newDiv);\n          }\n        '})]})]})}},58:function(e,n,s){"use strict";s.r(n);s(2);var r=s(1),a=s(0);n.default=function(){return Object(a.jsxs)(a.Fragment,{children:[Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Window API"}),Object(a.jsxs)(r.s,{fontSize:30,children:["La ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/API/Window",children:"Window API"})," es una interfaz que representa a una ventana que contiene un documento HTML."]}),Object(a.jsxs)(r.s,{fontSize:30,children:["En JS tenemos disponible el objeto global ",Object(a.jsx)("b",{children:"window"}),", que representa a la ventana que est\xe1 ejecutando el script."]}),Object(a.jsxs)(r.s,{fontSize:30,children:["En un navegador que posee pesta\xf1as, cada una est\xe1 representada por su propio ",Object(a.jsx)("b",{children:"window"})," object, sin embargo, a\xfan algunas propiedades o funciones a\xfan aplican al navegador completo."]})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Window API"}),Object(a.jsxs)(r.s,{fontSize:30,children:["Muchas funciones que solemos utilizar desde el c\xf3digo son expuestas por esta API, incluso la variable global ",Object(a.jsx)("b",{children:"document"})," que utilizamos para interactuar con el DOM es una propiedad del objecto ",Object(a.jsx)("b",{children:"window"}),"."]}),Object(a.jsx)(r.s,{fontSize:30,children:"Algunos ejemplos de funciones:"}),Object(a.jsxs)(r.t,{fontSize:30,children:[Object(a.jsx)(r.j,{children:Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/API/Window/alert",children:"alert"})}),Object(a.jsx)(r.j,{children:Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/API/Window/confirm",children:"confirm"})}),Object(a.jsx)(r.j,{children:Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/API/Window/prompt",children:"prompt"})}),Object(a.jsx)(r.j,{children:Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/API/Window/scroll",children:"scroll"})})]})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"window.console"}),Object(a.jsxs)(r.s,{fontSize:30,children:["La propiedad ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/API/Window/console",children:Object(a.jsx)("b",{children:"window.console"})})," retorna una referencia al objeto ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/API/console",children:"console"}),", que provee una serie de m\xe9todos para loguear informaci\xf3n en la consola de desarrollo del navegador."]}),Object(a.jsxs)(r.s,{fontSize:30,children:["Permite loguear informaci\xf3n con distintos niveles de importancia(",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/API/console/debug",children:"debug"}),", ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/API/console/error",children:"error"}),", ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/API/console/info",children:"info"})," o ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/API/console/log",children:"log"})," que es m\xe1s general), y adem\xe1s permite ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/API/console#using_groups_in_the_console",children:"agrupar los logs en distintos grupos"})," y no solo loguear texto sino cualquier tipo de objetos."]}),Object(a.jsxs)(r.s,{fontSize:30,children:["Permite incluso ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/API/console/count",children:"contar la cantidad de veces"})," que una l\xednea fue ejecutada y tambi\xe9n ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/API/console#timers",children:"calcular la duraci\xf3n"})," de una operaci\xf3n espec\xedfica."]}),Object(a.jsx)(r.b,{language:"js",children:'\n          console.log("Hello");\n        '}),Object(a.jsx)(r.k,{children:'Notar que para acceder a cualquier propiedad o funci\xf3n del objeto window no es necesario hacer "window.method".'})]})]})}},59:function(e,n,s){"use strict";s.r(n);s(2);var r=s(1),a=s(0);n.default=function(){return Object(a.jsx)(a.Fragment,{children:Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Debugger"}),Object(a.jsxs)(r.s,{fontSize:30,children:["La instrucci\xf3n ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/debugger",children:Object(a.jsx)("b",{children:"debugger"})})," invoca a cualquier funcionalidad de debugging que se encuentre disponible (si no existe ninguna, la instrucci\xf3n no tiene efecto)."]}),Object(a.jsxs)(r.s,{fontSize:30,children:["En el contexto de un navegador web, la instrucci\xf3n ",Object(a.jsx)("b",{children:"debugger"})," funciona como un breakpoint en la l\xednea del script donde fue colocada, deteniendo la ejecuci\xf3n del programa y dejando disponible todo el contexto (variables, constantes y funciones), accesible desde la consola del navegador."]}),Object(a.jsx)(r.b,{language:"js",children:"\n          const bar = 'foo';\n          debugger;\n        "})]})})}},60:function(e,n,s){"use strict";s.r(n);s(2);var r=s(1),a=s(0);n.default=function(){return Object(a.jsxs)(a.Fragment,{children:[Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Callbacks"}),Object(a.jsxs)(r.s,{fontSize:30,children:["Se denomina ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Glossary/Callback_function",children:"callback"})," a una funci\xf3n que fue pasada a otra como par\xe1metro para luego ser invocada."]}),Object(a.jsx)(r.b,{language:"js",children:"\n          function greeting(name) {\n            alert('Hello ' + name);\n          }\n          \n          function processUserInput(callback) {\n            var name = prompt('Please enter your name.');\n            callback(name);\n          }\n          \n          processUserInput(greeting);\n        "})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"setTimeout"}),Object(a.jsxs)(r.s,{fontSize:30,children:["La funci\xf3n ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout",children:"setTimeout"})," establece un timer que ejecutar\xe1 un callback cuando \xe9ste expire."]}),Object(a.jsx)(r.s,{fontSize:30,children:"Recibe como primer argumento un callback y como segundo argumento el tiempo en milisegundos luego de los cuales la funci\xf3n debe ser llamada y ambos son obligatorios. Los argumentos pasados luego de estos, ser\xe1n argumentos que recibir\xe1 la funci\xf3n al ser invocada."}),Object(a.jsxs)(r.s,{fontSize:30,children:["Esta funci\xf3n retorna un ",Object(a.jsx)("b",{children:"timeoutID"}),", que es un entero que representa al timer creado. Este valor puede ser usado luego para cancelar la ejecuci\xf3n del timer utilizando la funci\xf3n ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/clearTimeout",children:"clearTimeout"}),"."]})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"setTimeout"}),Object(a.jsxs)(r.d,{justifyContent:"space-between",style:{width:"80%"},children:[Object(a.jsx)(r.b,{language:"js",children:'\n            const resultContainer = document.querySelector("#result");\n\n            function startTimer() {\n              setTimeout(function () {\n                resultContainer.value = resultContainer.value + "Timer expired after 1 second";\n              }, 1000)\n            };\n\n            function clearResult() {\n              result.value = \'\';\n            }\n        \n            document.querySelector("#startBtn").addEventListener("click", startTimer);\n            document.querySelector("#clearBtn").addEventListener("click", clearResult)\n          '}),Object(a.jsx)("iframe",{src:"".concat("/js-training-classes","/snippets/class2/setTimeout.html")})]})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"setInterval"}),Object(a.jsxs)(r.s,{fontSize:30,children:["La funci\xf3n ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setInterval",children:"setInterval"})," establece un timer que ejecutar\xe1 un callback ",Object(a.jsx)("b",{children:"cada vez"})," que se cumpla el tiempo especificado."]}),Object(a.jsx)(r.s,{fontSize:30,children:"Recibe como primer argumento un callback y como segundo argumento el intervalo en milisegundos que debe cumplirse para invocar a la funci\xf3n y ambos son obligatorios. Los argumentos pasados luego de estos, ser\xe1n argumentos que recibir\xe1 la funci\xf3n al ser invocada."}),Object(a.jsxs)(r.s,{fontSize:30,children:["Esta funci\xf3n retorna un ",Object(a.jsx)("b",{children:"timeoutID"}),", que es un entero que representa al timer creado. Este valor puede ser usado luego para cancelar la ejecuci\xf3n del timer utilizando la funci\xf3n ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/clearInterval",children:"clearInterval"}),"."]})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"setInterval"}),Object(a.jsxs)(r.d,{justifyContent:"space-between",style:{width:"80%"},children:[Object(a.jsx)(r.b,{language:"js",children:"\n            let intervalId;\n            function startInterval() {\n              intervalId = setInterval(flashText, 500);\n            }\n        \n            function flashText() {\n              const container = document.querySelector('#container');\n        \n              if (container.style.color === 'red') {\n                container.style.color = 'blue'\n              } else {\n                container.style.color = 'red'\n              }\n            }\n        \n            function stopTextColor() {\n              clearInterval(intervalId);\n            }\n          "}),Object(a.jsx)("iframe",{src:"".concat("/js-training-classes","/snippets/class2/setInterval.html")})]})]})]})}},61:function(e,n,s){"use strict";s.r(n);s(2);var r=s(1),a=s(0);n.default=function(){return Object(a.jsxs)(a.Fragment,{children:[Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Eventos"}),Object(a.jsx)(r.s,{fontSize:30,children:"Los eventos son utilizados en JS para notificar de cambios o circunstancias que podr\xedan afectar la ejecuci\xf3n del c\xf3digo."}),Object(a.jsx)(r.s,{fontSize:30,children:"Estos eventos pueden dispararse a partir de la interacci\xf3n de un usuario con el sitio (click sobre un elemento, arrastar un elemento, cambiar el tama\xf1o de una ventana) o incluso pueden ser eventos disparados por el dispositivo (bater\xeda baja, eventos del SO). Tambi\xe9n pueden ser disparados program\xe1ticamente, por ejemplo para indicar el progreso de cierta tarea, o enviar una notificaci\xf3n cuando una acci\xf3n asincr\xf3nica sea completada."}),Object(a.jsxs)(r.s,{fontSize:30,children:["Cada evento est\xe1 representado por un objeto basado en la interfaz ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/API/Event",children:"Event"}),", y puede tener propiedades o m\xe9todos adicionales que ayuden o faciliten su procesamiento. Existe una gran variedad de ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/API/Event#introduction",children:"tipos de eventos"})," distintos, representados por interfaces que implementan Event."]})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Event interface"}),Object(a.jsx)(r.s,{fontSize:30,children:"Esta interfaz posee varias propiedades y m\xe9todos que son muy \xfatiles al momento de manejar eventos. Algunos de los m\xe1s importantes:"}),Object(a.jsxs)(r.t,{fontSize:30,children:[Object(a.jsxs)(r.j,{children:[Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/API/Event/isTrusted",children:"Event.isTrusted"})," indica si el evento fue iniciado por el browser o por un script."]}),Object(a.jsxs)(r.j,{children:[Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/API/Event/timeStamp",children:"Event.timestamp"})," retorna un unix timestamp que representa el momento en que el evento fue creado."]}),Object(a.jsxs)(r.j,{children:[Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/API/Event/target",children:"Event.target"})," retorna una referencia al elemento que dispar\xf3 el evento."]}),Object(a.jsxs)(r.j,{children:[Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/API/Event/preventDefault",children:"Event.preventDefault()"})," cancela el evento si es cancelable, evitando que se ejecute la acci\xf3n propia del elemento cuando ocurre el evento. Por ejemplo podemos cancelar el env\xedo de un formulario, o la redirecci\xf3n al hacer click en un link."]})]})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Event handling"}),Object(a.jsx)(r.s,{fontSize:30,children:"Los eventos pueden ocurrir sobre un elemento en particular, un set de elementos o incluso la ventana del browser completa, dependiendo el tipo de evento. Tienen asociados manejadores, que son b\xe1sicamente funciones JS que se ejecutan cuando el evento es disparado. Un mismo evento puede tener varios manejadores asociados"}),Object(a.jsxs)(r.s,{fontSize:30,children:["Podemos program\xe1ticamente agregar o remover manejadores utilizando las funciones ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener",children:"addEventListener"})," y ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener",children:"removeEventListener"}),". Esta es la ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#what_mechanism_should_i_use",children:"forma moderna de hacerlo"}),", que reemplaza a ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#inline_event_handlers_%E2%80%94_dont_use_these",children:"inline event handlers"})," y provee m\xe1s flexibilidad que ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers",children:"GlobalEventHandlers"}),"."]}),Object(a.jsx)(r.b,{language:"js",children:"\n          function clickHandler() {\n            // some code here\n          }\n\n          btn.addEventListener('click', clickHandler);\n          btn.removeEventListener('click', clickHandler);\n        "})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Event handling"}),Object(a.jsx)(r.s,{fontSize:30,children:"Algunos de los eventos m\xe1s comunes que se suelen utilizar."}),Object(a.jsx)("img",{src:"".concat("/js-training-classes","/images/common_events.png"),alt:"common events",height:"60%"})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Creando eventos"}),Object(a.jsxs)(r.s,{fontSize:30,children:["Se pueden crear eventos utilizando el constructor ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/API/Event",children:"Event"}),"."]}),Object(a.jsxs)(r.s,{fontSize:30,children:["Podemos utilizar la funci\xf3n ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/dispatchEvent",children:"dispatchEvent"})," para disparar el evento."]}),Object(a.jsx)(r.b,{language:"js",children:"\n          function handler(e) {\n            console.log(e.type);\n            console.log(e.detail);\n          }\n\n          const event = new Event('build');\n          \n          // Listen for the event.\n          elem.addEventListener('build', handler);\n          \n          // Dispatch the event.\n          elem.dispatchEvent(event);\n        "})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Creando eventos"}),Object(a.jsxs)(r.s,{fontSize:30,children:["En el caso de necesitar pasarle informaci\xf3n adicional a un evento, podemos usar el constructor ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/CustomEvent",children:"CustomEvent"}),", que adem\xe1s de las propiedades que podemos pasarle a Event, permite una clave ",Object(a.jsx)("b",{children:"detail"}),"."]}),Object(a.jsx)(r.b,{language:"js",children:"\n          function handler(e) {\n            console.log(e.type);\n            console.log(e.detail);\n          }\n          \n          // Listen for the event.\n          elem.addEventListener('build', handler);\n          \n          const event = new CustomEvent('build', { detail: 'Success' });\n          \n          // Dispatch the event.\n          elem.dispatchEvent(event);\n        "}),Object(a.jsx)(r.k,{children:"Podemos asociar un manejador a un elemento a\xfan cuando el evento a\xfan no fue creado."})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Propagaci\xf3n de eventos"}),Object(a.jsxs)(r.s,{fontSize:30,children:[Object(a.jsx)("a",{href:"https://www.w3.org/TR/DOM-Level-3-Events/#event-flow",children:"Event dispatch and DOM event flow"}),", ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/API/Event/stopPropagation",children:"Event.stopPropagation"}),"."]}),Object(a.jsx)("div",{style:{textAlign:"center"},children:Object(a.jsx)("img",{src:"".concat("/js-training-classes","/images/dom_event_flow.png"),alt:"common events",height:"70%",width:"50%"})})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Propagaci\xf3n de eventos"}),Object(a.jsx)(r.b,{language:"html",children:'\n          <form id="form">FORM\n            <div id="div">DIV\n              <p id="p">\n                P\n              </p>\n            </div>\n          </form>\n        \n          <script>\n            const form = document.querySelector("#form");\n            const div = document.querySelector("#div");\n            const p = document.querySelector("#p");\n        \n            function clickHandler(e) {\n              alert(e.currentTarget.tagName);\n            }\n        \n            form.addEventListener(\'click\', clickHandler);\n            div.addEventListener(\'click\', clickHandler);\n            p.addEventListener(\'click\', clickHandler);\n          <\/script>\n        '}),Object(a.jsx)("iframe",{src:"".concat("/js-training-classes","/snippets/class2/bubbling.html")})]})]})}},62:function(e,n,s){"use strict";s.r(n);s(2);var r=s(1),a=s(0);n.default=function(){return Object(a.jsx)(a.Fragment,{children:Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",className:"flex-center-column",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Pr\xe1ctica"}),Object(a.jsxs)(r.l,{fontSize:30,children:[Object(a.jsx)(r.j,{children:Object(a.jsx)("a",{href:"https://codesandbox.io/s/counter-ocqj1",children:"Counter"})}),Object(a.jsx)(r.j,{children:Object(a.jsx)("a",{href:"https://codesandbox.io/s/clock-2oqsz",children:"Clock"})}),Object(a.jsx)(r.j,{children:Object(a.jsx)("a",{href:"https://codesandbox.io/s/form-j5kwf",children:"Cart with Dynamic fields"})})]})]})})}},63:function(e,n,s){"use strict";s.r(n);s(2),s(40);var r=s(9),a=s(0);n.default=function(){return Object(a.jsxs)(a.Fragment,{children:[Object(a.jsx)(r.Agenda,{}),Object(a.jsx)(r.Introduction,{}),Object(a.jsx)(r.ArrayMethods,{}),Object(a.jsx)(r.RestSpread,{}),Object(a.jsx)(r.Destructuring,{}),Object(a.jsx)(r.ConditionalChaining,{}),Object(a.jsx)(r.Modules,{}),Object(a.jsx)(r.Classes,{}),Object(a.jsx)(r.ArrowFunctions,{}),Object(a.jsx)(r.TemplateLiterals,{}),Object(a.jsx)(r.StrictMode,{}),Object(a.jsx)(r.NewDataStructures,{}),Object(a.jsx)(r.Excercises,{})]})}},64:function(e,n,s){"use strict";s.r(n);s(2);var r=s(1),a=s(0);n.default=function(){return Object(a.jsxs)(a.Fragment,{children:[Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"ECMAScript"}),Object(a.jsx)(r.s,{fontSize:30,children:"Como vimos en la primera clase, ECMAScript es una especificaci\xf3n est\xe1ndar de JavaScript."}),Object(a.jsxs)(r.s,{fontSize:30,children:["A la fecha existen 11 versiones publicadas de ECMAScript, siendo la primera de 1997, y la ultima de 2020. Una de las versiones mas conocidas, y que agreg\xf3 cambios significativos fue la",Object(a.jsx)("strong",{children:" sexta edici\xf3n (2015), conocida como ES6."})]}),Object(a.jsxs)(r.s,{fontSize:30,children:["Si bien las dem\xe1s versiones tambi\xe9n agregan funcionalidades muy interesantes, en esta clase nos",Object(a.jsx)("strong",{children:" centraremos mayormente en ES6"}),"."]})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:Object(a.jsx)("a",{href:"http://es6-features.org/",children:"ES6"})}),Object(a.jsxs)(r.s,{fontSize:30,children:["Dentro de las nuevas funcionalidades y cambios que se introdujeron en ES6 podemos destacar:",Object(a.jsxs)(r.t,{fontSize:30,children:[Object(a.jsx)(r.j,{children:"Let y const"}),Object(a.jsx)(r.j,{children:"Nuevos m\xe9todos de Array"}),Object(a.jsx)(r.j,{children:"Arrow functions"}),Object(a.jsx)(r.j,{children:"Template literals"}),Object(a.jsx)(r.j,{children:"Operadores rest y spread"}),Object(a.jsx)(r.j,{children:"Desestructuraci\xf3n de objetos"}),Object(a.jsx)(r.j,{children:"Nuevo sistema de m\xf3dulos"}),Object(a.jsx)(r.j,{children:"Clases"}),Object(a.jsx)(r.j,{children:"Funciones generadoras"}),Object(a.jsx)(r.j,{children:"Promesas"})]})]})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",style:{display:"flex"},children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Compatibilidad hacia atr\xe1s"}),Object(a.jsx)(r.s,{fontSize:30,children:"Todos los sistemas que utilizan JS en cualquiera de sus versiones siempre ser\xe1n compatibles con versiones m\xe1s nuevas. Esto quiere decir que si se program\xf3 un sistema utilizando caracter\xedsticas de ES5, el mismo podr\xe1 correr perfectamente cuando el engine de JS incorpore caracter\xedsticas de ES6."}),Object(a.jsx)("div",{style:{alignSelf:"center"},children:Object(a.jsx)("img",{src:"".concat("/js-training-classes","/images/babel.png"),width:"300",height:"150"})}),Object(a.jsxs)(r.s,{fontSize:30,children:["Los navegadores no siempre implementan todas las funcionalidades nuevas de cada version de ECMAScript de inmediato, por lo que si se desea utilizar funcionalidades de una version reciente de ES, para garantizar compatibilidad entre todos los navegadores, se puede utilizar una herramienta como ",Object(a.jsx)("a",{href:"https://babeljs.io/",children:"Babel "}),"que sirve para transpilar c\xf3digo de ESX a JavaScript puro."]})]})]})}},65:function(e,n,s){"use strict";s.r(n);s(2);var r=s(1),a=s(0);n.default=function(){return Object(a.jsxs)(a.Fragment,{children:[Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"New array methods"}),Object(a.jsx)(r.s,{fontSize:30,children:"Con ES6 llegaron nuevos m\xe9todos sobre el tipo de dato Array, que nos permiten manipularlo de una forma m\xe1s \u201cfuncional\u201d. Si bien algunos de los m\xe9todos que veremos existen con anterioridad a la versi\xf3n ES6, aprovechamos esta clase para introducirlos. Los m\xe1s populares son:"}),Object(a.jsxs)(r.t,{fontSize:30,children:[Object(a.jsxs)(r.j,{children:["Array.",Object(a.jsx)("strong",{children:"map()"})]}),Object(a.jsxs)(r.j,{children:["Array.",Object(a.jsx)("strong",{children:"find()"})]}),Object(a.jsxs)(r.j,{children:["Array.",Object(a.jsx)("strong",{children:"forEach()"})]}),Object(a.jsxs)(r.j,{children:["Array.",Object(a.jsx)("strong",{children:"reduce()"})]}),Object(a.jsxs)(r.j,{children:["Array.",Object(a.jsx)("strong",{children:"from()"})]})]}),Object(a.jsxs)(r.s,{fontSize:30,children:["Existe una gran cantidad de m\xe9todos de Array y pueden verse"," ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/es/docs/Web/JavaScript/Reference/Global_Objects/Array",children:"aqu\xed."})]})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Array.map"}),Object(a.jsxs)(r.s,{fontSize:30,children:["El m\xe9todo"," ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/es/docs/Web/JavaScript/Reference/Global_Objects/Array/map",children:"map()"})," ","crea un nuevo array con los resultados de la llamada a la funci\xf3n callback recibida sobre cada uno de sus elementos."]}),Object(a.jsx)(r.b,{language:"js",children:"\n          const numbers = [1, 4, 9];\n          const roots = numbers.map(function(num) {\n              return Math.sqrt(num);\n          });\n\n          const people = [{name: 'John', age: 21}, {name:'Anna', age: 22}];\n          const names = people.map(function(person) {\n            return person.name;\n          });\n        "})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",style:{display:"flex"},children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Array.find()"}),Object(a.jsxs)(r.s,{fontSize:30,children:["El m\xe9todo"," ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/es/docs/Web/JavaScript/Reference/Global_Objects/Array/find",children:"find()"})," ","devuelve el valor del primer elemento del array que eval\xfaa a true la funci\xf3n proporcionada."]}),Object(a.jsx)(r.b,{language:"js",children:"\n          const inventary = [\n            {name: 'apples', quantity: 2},\n            {name: 'bananas', quantity: 0},\n            {name: 'cherry', quantity: 5}\n          ];\n        \n          function isCherry(fruit) {\n              return fruit.name === 'cherry';\n          }\n          \n          console.log(inventary.find(isCherry)); // { name: 'cherrys', quantity: 5 }\n        "})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",style:{display:"flex"},children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Array.forEach()"}),Object(a.jsxs)(r.s,{fontSize:30,children:["El m\xe9todo"," ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/es/docs/Web/JavaScript/Reference/Global_Objects/Array/foreach",children:"forEach()"})," ","ejecuta la funci\xf3n indicada una vez por cada elemento del array."]}),Object(a.jsx)(r.b,{language:"js",children:"\n          const array = ['a', 'b', 'c'];\n\n          array.forEach(element => console.log(element));\n          \n          // expected output: \"a\"\n          // expected output: \"b\"\n          // expected output: \"c\"\n        "})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",style:{display:"flex"},children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Array.reduce()"}),Object(a.jsxs)(r.s,{fontSize:30,children:["El m\xe9todo"," ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/es/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce",children:"reduce()"})," ","ejecuta una funci\xf3n reductora sobre cada elemento de un array, devolviendo como resultado un \xfanico valor."]}),Object(a.jsx)(r.b,{language:"js",children:"\n          const array1 = [1, 2, 3, 4];\n          const reducer = (accumulator, currentValue) => accumulator + currentValue;\n          \n          // 1 + 2 + 3 + 4\n          console.log(array1.reduce(reducer)); // expected output: 10\n          \n          // 5 + 1 + 2 + 3 + 4\n          console.log(array1.reduce(reducer, 5)); // expected output: 15\n        "})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",style:{display:"flex"},children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Array.reduce()"}),Object(a.jsx)(r.s,{fontSize:30,children:"La funci\xf3n reductora recibe cuatro argumentos:"}),Object(a.jsxs)(r.t,{fontSize:30,children:[Object(a.jsx)(r.j,{children:"Acumulador (acc)"}),Object(a.jsx)(r.j,{children:"Valor Actual (cur)"}),Object(a.jsx)(r.j,{children:"\xcdndice Actual (idx)"}),Object(a.jsx)(r.j,{children:"Array (src)"})]}),Object(a.jsx)(r.s,{fontSize:30,children:"El valor devuelto de la funci\xf3n reductora se asigna al acumulador, cuyo valor se recuerda en cada iteraci\xf3n y, en \xfaltima instancia, se convierte en el valor final, \xfanico y resultante."})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",style:{display:"flex"},children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Array.from()"}),Object(a.jsxs)(r.s,{fontSize:30,children:["El m\xe9todo"," ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/es/docs/Web/JavaScript/Reference/Global_Objects/Array/from",children:"from()"})," ","crea una nueva instancia de Array a partir de un objeto iterable."]}),Object(a.jsx)(r.b,{language:"js",children:'\n          console.log(Array.from(\'JavaScript\'));\n          // expected output: Array ["J", "a", "v", "a", "S", "c", "r", "i", "p", "t"];\n\n          console.log(Array.from([1, 2, 3], x => x + x));\n          // expected output: Array [2, 4, 6]\n        '}),Object(a.jsxs)(r.s,{fontSize:30,children:["Array.from() permite crear Arrays de:",Object(a.jsxs)(r.t,{fontSize:30,children:[Object(a.jsx)(r.j,{children:"Objetos array-like (objetos con propiedad length o elementos indexados)."}),Object(a.jsxs)(r.j,{children:["Objetos"," ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/es/docs/Web/JavaScript/Reference/Iteration_protocols",children:"iterables"})," ","(objetos de los cuales se pueden obtener sus elementos como Map y Set)."]})]})]})]})]})}},66:function(e,n,s){"use strict";s.r(n);s(2);var r=s(1),a=s(0);n.default=function(){return Object(a.jsxs)(a.Fragment,{children:[Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Operador spread"}),Object(a.jsxs)(r.s,{fontSize:30,children:["El"," ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax",children:"operador spread"})," ","permite a un elemento iterable (por ej. un arreglo o un string) ser expandido en cero o m\xe1s par\xe1metros (para llamadas a funciones), elementos (para arreglos) o, en el caso de un objeto, ser expandido en cero o m\xe1s pares de clave-valor."]}),Object(a.jsx)(r.b,{language:"js",children:"\n          var dateFields = [1970, 0, 1];  \n          var d = new Date(...dateFields); // 1 Jan 1970\n          \n          var parts = ['shoulders', 'knees'];\n          var lyrics = ['head', ...parts, 'and', 'toes']; // [\"head\", \"shoulders\", \"knees\", \"and\", \"toes\"]\n          \n          var obj1 = { foo: 'bar', x: 42 };\n          var clonedObj = { ...obj1 }; // Object { foo: \"bar\", x: 42 }\n        "})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",style:{display:"flex"},children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Par\xe1metros rest"}),Object(a.jsxs)(r.s,{fontSize:30,children:["Los"," ",Object(a.jsxs)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters",children:["par\xe1metros rest"," "]}),"nos permiten recibir un n\xfamero indefinido de par\xe1metros como un array. La sint\xe1xis es id\xe9ntica a la del ",Object(a.jsx)("strong",{children:"operador spread."})]}),Object(a.jsx)(r.b,{language:"js",children:'\n          function sum(...theArgs) {\n            return theArgs.reduce((previous, current) => {\n              return previous + current;\n            });\n          }\n          \n          console.log(sum(1, 2, 3)); // expected output: 6\n          console.log(sum(1, 2, 3, 4)); // expected output: 10\n\n          function myFun(a, b, ...manyMoreArgs) {\n            console.log("a", a);\n            console.log("b", b);\n            console.log("manyMoreArgs", manyMoreArgs); // ???\n          }\n          \n          myFun("one", "two", "three", "four", "five", "six");\n        '})]})]})}},67:function(e,n,s){"use strict";s.r(n);s(2);var r=s(1),a=s(0);n.default=function(){return Object(a.jsxs)(a.Fragment,{children:[Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Sint\xe1xis de desestructuraci\xf3n"}),Object(a.jsx)(r.s,{fontSize:30,children:"En algunos casos puede resultarnos conveniente manipular propiedades de un objeto o elementos de un arreglo en particular. La desestructuraci\xf3n es una sint\xe1xis especial que nos permite \u201cdesempaquetar\u201d arreglos u objetos en un conjunto de variables. Por ejemplo, cuando necesitamos pasar propiedades o elementos espec\xedficos a una funci\xf3n."}),Object(a.jsxs)(r.t,{fontSize:30,children:[Object(a.jsxs)(r.j,{children:["Desestructuraci\xf3n de ",Object(a.jsx)("strong",{children:"arreglos"})]}),Object(a.jsxs)(r.j,{children:["Desestructuraci\xf3n de ",Object(a.jsx)("strong",{children:"objetos"})]})]})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",style:{display:"flex"},children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Desestructuraci\xf3n de arreglos"}),Object(a.jsxs)(r.s,{fontSize:30,children:["La"," ",Object(a.jsx)("a",{href:"https://javascript.info/destructuring-assignment#array-destructuring",children:"desestructuraci\xf3n de arreglos"})," ","nos permite asignar a una o m\xe1s variables elementos de un arreglo.",Object(a.jsxs)(r.t,{fontSize:30,children:[Object(a.jsx)(r.j,{children:"Sirve con cualquier iterable del lado derecho de la asignaci\xf3n."}),Object(a.jsx)(r.j,{children:"Podemos ignorar elementos utilizando comas"}),Object(a.jsx)(r.j,{children:"Podemos intercambiar variables"}),Object(a.jsxs)(r.j,{children:["Podemos combinarlo para loopear con el m\xe9todo"," ",Object(a.jsx)("strong",{children:".entries()"})]})]})]}),Object(a.jsx)(r.b,{language:"js",children:'\n          // We have an array with the name and surname\n          let arr = ["John", "Smith"]\n          \n          // Destructuring assignment sets firstName = arr[0]\n          // and surname = arr[1]\n          let [firstName, surname] = arr;\n          \n          console.log(firstName); // John\n          console.log(surname);  // Smith\n        '}),Object(a.jsx)(r.k,{children:"Cuando el arreglo contiene m\xe1s elementos de los que esperamos del lado izquierdo, podemos utilizar el operador spread para obtener los elementos restantes en un arreglo."})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",style:{display:"flex"},children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Desestructuraci\xf3n de arreglos"}),Object(a.jsx)(r.b,{language:"js",children:'\n          // Works with any iterable\n          let [a, b, c] = "abc"; // ["a", "b", "c"]\n\n          // We can use it to loop over keys and values with .entries()\n          let user = {\n            name: "John",\n            age: 30\n          };\n\n          for (let [key, value] of Object.entries(user)) {\n            console.log(key + value); // name:John, and then age:30\n          }\n\n          // Ignore elements using commas\n          let [article, , verb] = ["The", "dog", "ran", "fast"];\n\n          console.log(verb); // "ran"\n        '})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",style:{display:"flex"},children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Desestructuraci\xf3n de objetos"}),Object(a.jsxs)(r.s,{fontSize:30,children:["La"," ",Object(a.jsx)("a",{href:"https://javascript.info/destructuring-assignment#object-destructuring",children:"desestructuraci\xf3n de objetos"})," ","nos permite desempaquetar propiedades de un objeto en una o m\xe1s variables. En este caso, utilizamos llaves ",Object(a.jsx)("strong",{children:"{  }"}),"."]}),Object(a.jsx)(r.b,{language:"js",children:'\n          let options = {\n            title: "Menu",\n            width: 100,\n            height: 200\n          };\n          \n          let {title, width, height} = options;\n          \n          console.log(title);  // "Menu"\n          console.log(width);  // 100\n          console.log(height); // 200\n\n          // We can overwrite the name of a property\n\n          let {width: w, height: h, title} = options;\n\n          console.log(w, h, title); // 100, 200, "Menu"\n\n          // For potentially missing properties, we can set default values using "="\n          let options = {\n            title: "Menu"\n          };\n          \n          let {width = 100, height = 200, title} = options;\n          \n          alert(title);  // Menu\n          alert(width);  // 100\n          alert(height); // 200\n        '})]})]})}},68:function(e,n,s){"use strict";s.r(n);s(2);var r=s(1),a=s(0);n.default=function(){return Object(a.jsxs)(a.Fragment,{children:[Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Encadenamiento opcional"}),Object(a.jsxs)(r.s,{fontSize:30,children:["El\xa0operador de\xa0",Object(a.jsx)("a",{href:"https://developer.mozilla.org/es/docs/Web/JavaScript/Reference/Operators/Optional_chaining",children:"encadenamiento opcional\xa0?."}),"permite leer el valor de una propiedad o un conjunto de propiedades anidadas de un objeto, sin tener que validar expresamente que cada referencia en la \u201ccadena\u201d sea v\xe1lida."]}),Object(a.jsxs)(r.s,{fontSize:30,children:["Utilizando este operador si una referencia es\xa0casi-nula\xa0",Object(a.jsx)("strong",{children:"(null\xa0o\xa0undefined)"})," en lugar de causar un error, la expresi\xf3n hace una evaluaci\xf3n de circuito corto\xa0y retorna"," ",Object(a.jsx)("strong",{children:"undefined"}),".\xa0Cuando se usa con llamadas a funciones, devuelve\xa0undefined\xa0si la funci\xf3n dada no existe.",Object(a.jsxs)(r.s,{fontSize:30,children:["Su sint\xe1xis dependiendo el tipo de dato es la siguiente:",Object(a.jsxs)(r.t,{fontSize:30,children:[Object(a.jsx)(r.j,{children:"obj?.prop"}),Object(a.jsx)(r.j,{children:"obj?.[expr]"}),Object(a.jsx)(r.j,{children:"arr?.[index]"}),Object(a.jsx)(r.j,{children:"func?.(args)"})]})]})]}),Object(a.jsx)(r.k,{children:"Conditional chaining fue introducido en ES2020."})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",style:{display:"flex"},children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Encadenamiento opcional"}),Object(a.jsx)(r.b,{language:"js",children:"\n          const adventurer = {\n            name: 'Alice',\n            cat: {\n              name: 'Dinah'\n            }\n          };\n          \n          const dogName = adventurer.dog?.name;\n          console.log(dogName); // expected output: undefined\n          \n          console.log(adventurer.someNonExistentMethod?.()); // expected output: undefined\n\n          let arr = [1, 2, 3, 4, 5];\n          console.log(arr?.[42]); // expected output: undefined\n        "})]})]})}},69:function(e,n,s){"use strict";s.r(n);s(2);var r=s(1),a=s(0);n.default=function(){return Object(a.jsxs)(a.Fragment,{children:[Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"M\xf3dulos"}),Object(a.jsx)(r.s,{fontSize:30,children:"Los programas escritos en JavaScript comenzaron siendo bastante peque\xf1os (tareas de scripting aisladas o adici\xf3n de interactividad a p\xe1ginas web) por lo que generalmente no se necesitaban grandes scripts."}),Object(a.jsx)(r.s,{fontSize:30,children:"El uso de JavaScript ha ido evolucionando, y ahora tenemos aplicaciones completas que se ejecutan en navegadores utilizando librer\xedas como ReactJS o frameworks como Angular. Adem\xe1s, JS ahora se usa en otros contextos (Node.js por ejemplo)."}),Object(a.jsxs)(r.s,{fontSize:30,children:["En los \xfaltimos a\xf1os se ha comenzado a pensar en proporcionar mecanismos para dividir programas JavaScript en m\xf3dulos separados que se puedan importar cuando sea necesario. Hay una serie de librer\xedas y sistemas que permiten el uso de m\xf3dulos, siendo una de las m\xe1s adoptadas"," ",Object(a.jsx)("strong",{children:"CommonJS."})]})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",style:{display:"flex"},children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"CommonJS"}),Object(a.jsxs)(r.s,{fontSize:30,children:["Es el sistema de m\xf3dulos utilizado por defecto por"," ",Object(a.jsx)("strong",{children:"Node.js"})," y consta de dos directivas:",Object(a.jsxs)(r.t,{fontSize:30,children:[Object(a.jsx)(r.j,{children:Object(a.jsx)("strong",{children:"require()"})}),Object(a.jsx)(r.j,{children:Object(a.jsx)("strong",{children:"module.exports"})})]})]}),Object(a.jsx)(r.b,{language:"js",children:"\n          const circle = require('./circle.js');\n          console.log(\"The area of a circle of radius 4 is \" + circle.area(4));\n          \n          const { PI } = Math;\n          \n          function area(r){\n            return PI * r ** 2;\n          } \n          \n          function circumference(r){\n            2 * PI * r;\n          }\n\n          module.exports = { area, circumference };\n        "})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"ES6 Modules"}),Object(a.jsx)(r.s,{fontSize:30,children:"Sin embargo, con la llegada de ES6 se implement\xf3 un sistema de m\xf3dulos nativo al navegador que le permite al mismo optimizar la carga de m\xf3dulos sin tener que utilizar una librer\xeda."}),Object(a.jsxs)(r.s,{fontSize:30,children:["Ahora, las directivas utilizadas para importar y exportar funcionalidad desde distintos m\xf3dulos son las siguientes:",Object(a.jsxs)(r.t,{fontSize:30,children:[Object(a.jsx)(r.j,{children:Object(a.jsx)("strong",{children:"import"})}),Object(a.jsx)(r.j,{children:Object(a.jsx)("strong",{children:"export"})})]}),Object(a.jsxs)(r.s,{fontSize:30,children:["La ",Object(a.jsx)("strong",{children:"principal diferencia"})," que existe entre CommonJS y el sistema implementado en ES6 es que este \xfaltimo pre-parsea los m\xf3dulos para resolver las importaciones antes de que el c\xf3digo sea ejecutado. Mientras que en CommonJS, los m\xf3dulos cargan dependencias bajo demanda en tiempo de ejecuci\xf3n."]})]})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"ES6 Modules"}),Object(a.jsx)(r.b,{language:"js",children:'\n          //  lib/math.js\n          export function sum (x, y) { return x + y }\n          export const pi = 3.141593\n          \n          //  someApp.js\n          import * as math from "lib/math"\n          console.log("2\u03c0 = " + math.sum(math.pi, math.pi))\n          \n          //  otherApp.js\n          import { sum, pi } from "lib/math"\n          console.log("2\u03c0 = " + sum(pi, pi))\n        '}),Object(a.jsx)(r.k,{children:"Mencionar export default."})]})]})}},70:function(e,n,s){"use strict";s.r(n);s(2);var r=s(1),a=s(0);n.default=function(){return Object(a.jsxs)(a.Fragment,{children:[Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Arrow functions"}),Object(a.jsxs)(r.s,{fontSize:30,children:["Una"," ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions",children:"arrow function"})," ","es una alternativa un poco m\xe1s compacta a una"," ",Object(a.jsx)("strong",{children:"function expression"})," tradicional, aunque tiene algunas limitaciones y no puede utilizarse en todos los casos. Estas limitaciones son principalmente las siguientes:"," ",Object(a.jsxs)(r.t,{fontSize:30,children:[Object(a.jsx)(r.j,{children:"No tienen sus propios enlaces a this o super y no se deben usar como m\xe9todos dentro de un objeto o clase."}),Object(a.jsxs)(r.j,{children:["No son aptas para los m\xe9todos"," ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/es/docs/Web/JavaScript/Reference/Global_Objects/Function/call",children:"call"}),","," ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/es/docs/Web/JavaScript/Reference/Global_Objects/Function/apply",children:"apply"})," ","y"," ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/es/docs/Web/JavaScript/Reference/Global_Objects/Function/bind",children:"bind"}),", que se basan en establecer un alcance particular."]}),Object(a.jsx)(r.j,{children:"No se pueden utilizar como constructor."})]})]}),Object(a.jsx)(r.k,{children:"Existen otras limitaciones, como por ejemplo el uso de yield dentro de su cuerpo, pero en las cuales todav\xeda no vale la pena entrar en detalle."})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",style:{display:"flex"},children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Arrow functions"}),Object(a.jsxs)(r.s,{fontSize:30,children:["La sint\xe1xis de una ",Object(a.jsx)("strong",{children:"arrow function"})," es la siguiente:"]}),Object(a.jsx)(r.b,{language:"js",children:"\n          const functionName = (param1, param2) => {\n            return param1 * param2;\n          }\n\n          // Return statement is optional as long as there's not additional logic\n          const functionName = (param1, param2) => param1 * param2;\n\n          // A common use case is related with array methods such as .map()\n          const multipliedByTwo = [1, 2, 3].map((num) => num * 2);\n\n        "}),Object(a.jsxs)(r.s,{fontSize:30,children:["Las arrow functions no bindean su propio this, si no que lo heredan de su ",Object(a.jsx)("strong",{children:'"bloque padre"'}),", a lo que tambi\xe9n nos referimos como",Object(a.jsx)("strong",{children:'"alcance l\xe9xico"'}),". En"," ",Object(a.jsx)("a",{href:"https://www.codementor.io/@dariogarciamoya/understanding-this-in-javascript-with-arrow-functions-gcpjwfyuc",children:"este art\xedculo"})," ","se detalla en profundidad la diferencia en el binding de"," ",Object(a.jsx)("strong",{children:"this"})," en arrow functions vs funciones normales."]}),Object(a.jsx)(r.k,{children:"Notar como en el segundo ejemplo se remueven las llaves."})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",style:{display:"flex"},children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Arrow functions"}),Object(a.jsx)(r.b,{language:"js",children:"\n          const myObject = {\n            myMethod: () => {\n              console.log(this);\n            }\n          };\n\n          myObject.myMethod() // this === window or global object\n\n          const myMethod = myObject.myMethod;\n          myMethod() // this === window or global object\n        "})]})]})}},71:function(e,n,s){"use strict";s.r(n);s(2);var r=s(1),a=s(0);n.default=function(){return Object(a.jsxs)(a.Fragment,{children:[Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Template literals"}),Object(a.jsxs)(r.s,{fontSize:30,children:["Los",Object(a.jsx)("a",{href:"",children:" template literals"})," nos proveen una nueva forma de crear strings con algunas caracter\xedsticas interesantes:"," ",Object(a.jsxs)(r.t,{fontSize:30,children:[Object(a.jsx)(r.j,{children:"Nos permiten tener un mayor control sobre la creaci\xf3n de strings din\xe1micos."}),Object(a.jsx)(r.j,{children:"Facilitan y hacen m\xe1s legible la concatenaci\xf3n de strings."}),Object(a.jsx)(r.j,{children:"Nos permiten generar \u201cTagged Templates\u201d"})]})]}),Object(a.jsxs)(r.s,{fontSize:30,children:["En vez de utilizar comillas simples o dobles, para definir un template literal utilizamos ",Object(a.jsx)("strong",{children:"comillas invertidas `"}),"."]}),Object(a.jsx)(r.b,{language:"js",children:"\n          let example = `This is a new string`;\n        "})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",style:{display:"flex"},children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Template literals"}),Object(a.jsx)(r.s,{fontSize:30,children:"Dentro de un template literal podemos incluir \u201cexpresiones\u201d. Una expresi\xf3n siempre retorna un valor, y en este contexto cada expresi\xf3n ser\xe1 evaluada y reemplazada por el valor correspondiente."}),Object(a.jsx)(r.b,{language:"js",children:'\n          let name = \u201cJohn\u201d; \n          let greeting = `Hey ${name}! How are you doing?` // Hey John! How are you doing?\n\n          let num = 32;\n          \n          let result = `The number ${num} is ${ num % 2 === 0 ? "even" : "odd"}`; // The number 32 is even.\n        '})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",style:{display:"flex"},children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Tagged templates"}),Object(a.jsxs)(r.s,{fontSize:30,children:["Los ",Object(a.jsx)("a",{href:"",children:"tagged templates"})," permiten parsear un template literal con una funci\xf3n. El primer par\xe1metro de la funci\xf3n contiene un array con los strings y los par\xe1metros restantes est\xe1n asociados a las expresiones. La ",Object(a.jsx)("strong",{children:"tag function"})," puede realizar cualquier tipo de operaci\xf3n sobre estos par\xe1metros y retornar el string procesado."]}),Object(a.jsx)(r.b,{language:"js",children:"\n          let person = 'Mike';\n          let age = 28;\n          \n          function myTag(strings, personExp, ageExp) {\n            let str0 = strings[0]; // \"That \"\n            let str1 = strings[1]; // \" is a \"\n            let str2 = strings[2]; // \".\"\n          \n            let ageStr;\n            if (ageExp > 99){\n              ageStr = 'centenarian';\n            } else {\n              ageStr = 'youngster';\n            }\n          \n            // We can even return a string built using a template literal\n            return `${str0}${personExp}${str1}${ageStr}${str2}`;\n          }\n          \n          let output = myTag`That ${ person } is a ${ age }.`;\n          \n          console.log(output); // That Mike is a youngster\n        "})]})]})}},72:function(e,n,s){"use strict";s.r(n);s(2);var r=s(1),a=s(0);n.default=function(){return Object(a.jsxs)(a.Fragment,{children:[Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Clases"}),Object(a.jsxs)(r.s,{fontSize:30,children:["Las clases en JavaScript son una mejora sint\xe1ctica sobre la herencia basada en prototipos. La sint\xe1xis de las clases\xa0",Object(a.jsx)("strong",{children:"no\xa0introduce un nuevo modelo de herencia orientada a objetos"}),". Las clases de JavaScript proveen una sint\xe1xis mucho m\xe1s clara y simple para crear objetos y lidiar con la herencia."]}),Object(a.jsx)(r.b,{language:"js",children:"\n          class Rectangle {\n            constructor(height, width) {\n              this.height = height;\n              this.width = width;\n            }\n          }\n        "}),Object(a.jsxs)(r.s,{fontSize:30,children:["Para ",Object(a.jsx)("strong",{children:"declarar una clase"})," utilizamos la palabra clave",Object(a.jsx)("i",{children:" class"}),".",Object(a.jsx)(r.s,{fontSize:30,children:"Es importante notar que la declaraci\xf3n de clases no se ve afectada por el hoisting en JS. Por lo tanto, si queremos hacer referencia a una clase, esta debe haber sido declarada previamente en el c\xf3digo."})]})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Expresiones de clases"}),Object(a.jsxs)(r.s,{fontSize:30,children:["Tambi\xe9n podemos definir clases utilizando"," ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes#class_expressions",children:"expresiones de clases"}),". Las expresiones de clase pueden ser an\xf3nimas o nombradas. El nombre asignado a una clase definida con esta notaci\xf3n se encuentra disponible al acceder a la propiedad name."]}),Object(a.jsx)(r.b,{language:"js",children:'\n          // Anonymous\n          let Rectangle = class {\n            constructor(height, width) {\n              this.height = height;\n              this.width = width;\n            }\n          };\n          \n          console.log(Rectangle.name);\n          // output: "Rectangle"\n          \n          // Named\n          let Rectangle = class Rectangle2 {\n            constructor(height, width) {\n              this.height = height;\n              this.width = width;\n            }\n          };\n          console.log(Rectangle.name);\n          // output: "Rectangle2"\n        '}),Object(a.jsx)(r.k,{children:"Las expresiones de clase tampoco son elevadas durante el proceso de hoisting."})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",style:{display:"flex"},children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Class body"}),Object(a.jsx)(r.s,{fontSize:30,children:"El contenido de una clase es la parte que se encuentra entre llaves y es aqu\xed donde se definen los miembros de clase, como los m\xe9todos, variables o constructores."}),Object(a.jsxs)(r.s,{fontSize:30,children:["El m\xe9todo ",Object(a.jsx)("strong",{children:"constructor"}),' es un m\xe9todo especial para crear e inicializar un objeto creado con una clase. Solo puede haber un m\xe9todo especial con el nombre "constructor" en una clase.',Object(a.jsx)(r.s,{fontSize:30,children:"Un constructor puede usar la palabra reservada super para llamar al constructor de una superclase."})]}),Object(a.jsx)(r.s,{fontSize:30,children:Object(a.jsxs)("i",{children:["Dentro de un m\xe9todo de una clase ",Object(a.jsx)("strong",{children:"this"})," hace referencia al objeto actual. Es decir, a la instancia de clase donde el m\xe9todo fue invocado."]})})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",style:{display:"flex"},children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"M\xe9todos de instancia"}),Object(a.jsx)(r.b,{language:"js",children:"\n          class Rectangle {\n            constructor(height, width) {\n              this.height = height;\n              this.width = width;\n            }\n            // Getter\n            get area() {\n              return this.calcArea();\n            }\n\n            // Setter\n            set height(h) {\n              if (h > 0) {\n                this.height = h;\n              }\n            }\n\n            // Method\n            calcArea() {\n              return this.height * this.width;\n            }\n          }\n          \n          const square = new Rectangle(10, 10);\n          \n          console.log(square.area); // 100\n        "})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",style:{display:"flex"},children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Getters and setters"}),Object(a.jsxs)(r.s,{fontSize:30,children:["Como vimos en el ejemplo anterior, se pueden definir m\xe9todos getters y setters con las palabras claves ",Object(a.jsx)("strong",{children:"get"})," y"," ",Object(a.jsx)("strong",{children:"set"})," respectivamente, seguidas del nombre de la variable a la que afectan."]}),Object(a.jsx)(r.s,{fontSize:30,children:"El m\xe9todo setter correspondiente se ejecutar\xe1 cuando se quiera asignar un valor a una propiedad del objeto."}),Object(a.jsxs)(r.s,{fontSize:30,children:["Podemos definir"," ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes/Private_class_fields",children:"variables y m\xe9todos privados"})," ","utilizando el prefijo ",Object(a.jsx)("strong",{children:"#"}),". Si se quiere acceder a un m\xe9todo o variable privada desde fuera de la clase, se recibir\xe1 un SyntaxError."]}),Object(a.jsx)(r.k,{children:"Comentar que cuando se definen campos est\xe1ticos y privados la herencia de clases se comporta de manera extra\xf1a, y hacer hincapi\xe9 en ir al link de la diapo."})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",style:{display:"flex"},children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"M\xe9todos y variables est\xe1ticas"}),Object(a.jsxs)(r.s,{fontSize:30,children:["La\xa0palabra clave\xa0",Object(a.jsx)("strong",{children:Object(a.jsx)("i",{children:"static "})}),"define un m\xe9todo o variable est\xe1tica para una clase. Los m\xe9todos y variables est\xe1ticas son llamadas sin instanciar a la clase y\xa0no\xa0pueden ser llamadas mediante una instancia de clase.",Object(a.jsx)(r.s,{fontSize:30,children:"Se utilizan generalmente para crear funciones helpers o servicios."})]}),Object(a.jsx)(r.b,{language:"js",children:'\n          class Point {\n            constructor(x, y) {\n              this.x = x;\n              this.y = y;\n            }\n          \n            static displayName = "Point";\n            static distance(a, b) {\n              const dx = a.x - b.x;\n              const dy = a.y - b.y;\n          \n              return Math.hypot(dx, dy);\n            }\n          }\n        '})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",style:{display:"flex"},children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Herencia"}),Object(a.jsxs)(r.s,{fontSize:30,children:["Podemos utilizar la palabra clave ",Object(a.jsx)("strong",{children:"extends"})," para crear subclases."]}),Object(a.jsx)(r.b,{language:"js",children:"\n          class Animal {\n            constructor(name) {\n              this.name = name;\n            }\n          \n            speak() {\n              console.log(`${this.name} makes a noise.`);\n            }\n          }\n          \n          class Dog extends Animal {\n            constructor(name) {\n              super(name); // call the super class constructor and pass in the name parameter\n            }\n          \n            speak() {\n              console.log(`${this.name} barks.`);\n            }\n          }\n          \n          let d = new Dog('Mitzie');\n          d.speak(); // Mitzie barks.\n        "}),Object(a.jsx)(r.k,{children:'Si la subclase define un constructor entonces debe primero invocar a super() usando "this".'})]})]})}},73:function(e,n,s){"use strict";s.r(n);s(2);var r=s(1),a=s(0);n.default=function(){return Object(a.jsxs)(a.Fragment,{children:[Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Modo estricto"}),Object(a.jsxs)(r.s,{fontSize:30,children:["Con ES5 lleg\xf3 el"," ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode",children:'"modo estricto"'})," ","que permite elegir una ",Object(a.jsx)("i",{children:"variante restringida"})," de JavaScript. Este modo no es s\xf3lo un subconjunto si no que tiene intencionalmente diferencias sem\xe1nticas con el c\xf3digo normal."]}),Object(a.jsx)(r.s,{fontSize:30,children:"Los navegadores que no admiten el modo estricto ejecutar\xe1n el c\xf3digo con un comportamiento diferente a los que s\xed lo soportan, por lo tanto no conf\xedes en el modo estricto sin antes hacer pruebas de sus caracter\xedsticas m\xe1s relevantes."}),Object(a.jsx)(r.s,{fontSize:30,children:"Los modos estricto y no estricto pueden coexistir, por lo tanto el c\xf3digo se puede transformar a modo estricto incrementalmente."})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",style:{display:"flex"},children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Modo estricto"}),Object(a.jsx)(r.s,{fontSize:30,children:"El modo estricto tiene varios cambios en la sem\xe1ntica normal de JavaScript:"}),Object(a.jsxs)(r.t,{fontSize:30,children:[Object(a.jsx)(r.j,{children:"Elimina algunos errores silenciosos de JavaScript cambi\xe1ndolos para que lancen errores."}),Object(a.jsx)(r.j,{children:"Corrige errores que hacen dif\xedcil para los motores de JavaScript realizar optimizaciones: a veces, el c\xf3digo en modo estricto puede correr m\xe1s r\xe1pido que un c\xf3digo id\xe9ntico pero no estricto."}),Object(a.jsx)(r.j,{children:"Proh\xedbe cierta sintaxis que probablemente sea definida en futuras versiones de ECMAScript."})]}),Object(a.jsxs)(r.s,{fontSize:30,children:["La lista de cambios que genera el modo estricto es bastante larga y puede encontrarse en detalle"," ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode#changes_in_strict_mode",children:"aqu\xed"}),"."]})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",style:{display:"flex"},children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Modo estricto"}),Object(a.jsxs)(r.s,{fontSize:30,children:["Para activar el modo estricto en un script o funci\xf3n debemos escribir"," ",Object(a.jsx)("strong",{children:'"use strict"'})," antes de definir cualquier otra expresi\xf3n."]}),Object(a.jsx)(r.b,{language:"js",children:"\n          function strict() {\n            // Function-level strict mode syntax\n            'use strict';\n\n            function nested() { return 'And so am I!'; }\n\n            return \"Hi!  I'm a strict mode function!  \" + nested();\n          }\n        "}),Object(a.jsx)(r.s,{fontSize:30,children:"Los m\xf3dulos y las clases se encuentran por defecto definidas en modo estricto."})]})]})}},74:function(e,n,s){"use strict";s.r(n);s(2);var r=s(1),a=s(0);n.default=function(){return Object(a.jsxs)(a.Fragment,{children:[Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Colecciones"}),Object(a.jsxs)(r.s,{fontSize:30,children:["ES6 introdujo 2 nuevas estructuras de datos:",Object(a.jsxs)(r.t,{fontSize:30,children:[Object(a.jsxs)(r.j,{children:[Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",children:"Map"}),": es una colecci\xf3n de pares clave-valor."]}),Object(a.jsxs)(r.j,{children:[Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",children:"Set"}),": es una estructura similar a un arreglo pero que no admite elementos duplicados."]})]})]}),Object(a.jsxs)(r.s,{fontSize:30,children:["Adem\xe1s, se definen dos variantes de cada una de estas:"," ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",children:"WeakMap"})," ","y"," ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WEakSet",children:"WeakSet"})," ","que agregan algunas diferencias."]})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",style:{display:"flex"},children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Map"}),Object(a.jsx)(r.b,{language:"js",children:"\n          // Create a new empty Map\n          let map = new Map(); \n          map.set('name','Tutorial Point'); \n          map.get('name'); // Tutorial point\n\n          // Get the amount of key-value pairs of map.\n          map.size; // 1\n\n          // Check if map has a given key.\n          map.has('age') // false\n        "}),Object(a.jsx)(r.b,{language:"js",children:"\n          // We can also instantiate a Map with elements\n          let roles = new Map([ \n              ['r1', 'User'], \n              ['r2', 'Guest'], \n              ['r3', 'Admin'], \n          ]);  \n          console.log(roles.get('r2'))\n        "}),Object(a.jsx)(r.k,{children:"Existen otros m\xe9todos en la interfaz de Map como clear() que pueden verse en los links de la primer diapo."})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",style:{display:"flex"},children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"WeakMap"}),Object(a.jsxs)(r.s,{fontSize:30,children:["Un WeakMap es id\xe9ntico a un Map con algunas excepciones:",Object(a.jsxs)(r.t,{fontSize:30,children:[Object(a.jsxs)(r.j,{children:["Sus claves ",Object(a.jsx)("strong",{children:"deben"})," ser objetos."]}),Object(a.jsx)(r.j,{children:"Las claves de un WeakMap pueden ser recolectadas por el Garbage Collector."}),Object(a.jsxs)(r.j,{children:["Un WeakMap no puede ser iterado o limpiado. Es decir, no se pueden invocar los m\xe9todos ",Object(a.jsx)("strong",{children:"forEach()"})," ni"," ",Object(a.jsx)("strong",{children:"clear()"})]})]})]})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",style:{display:"flex"},children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Set"}),Object(a.jsx)(r.b,{language:"js",children:"\n          let mySet = new Set();\n\n          mySet1.add(1) // Set [ 1 ]\n          mySet1.add(5) // Set [ 1, 5 ]\n          mySet1.add(5) // Set [ 1, 5 ]\n\n          mySet1.add('some text') // Set [ 1, 5, 'some text' ]\n\n          const o = {a: 1, b: 2}\n          mySet1.add(o)\n          \n          mySet1.add({a: 1, b: 2}) // o is referencing a different object, so this is okay\n\n          mySet1.delete(5) // removes 5 from the set\n\n          mySet1.size // 4, since we just removed one value\n\n          mySet1.clear() // Set []\n        "}),Object(a.jsx)(r.k,{children:"Un WeakSet es identico a un Set solo que estos pueden contener unicamente objetos, y estos objetos pueden ser removidos por el Garbage Collector. Adem\xe1s, no pueden ser iterados ni limpiados."})]})]})}},75:function(e,n,s){"use strict";s.r(n);s(2);var r=s(1),a=s(0);n.default=function(){return Object(a.jsx)(a.Fragment,{children:Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",className:"flex-center-column",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Agenda"}),Object(a.jsxs)(r.l,{fontSize:30,children:[Object(a.jsx)(r.j,{children:"Introducci\xf3n a ES6"}),Object(a.jsx)(r.j,{children:"Nuevos m\xe9todos de Array"}),Object(a.jsx)(r.j,{children:"Operador spread"}),Object(a.jsx)(r.j,{children:"Destructuring"}),Object(a.jsx)(r.j,{children:"Encadenamiento opcional"}),Object(a.jsx)(r.j,{children:"M\xf3dulos"}),Object(a.jsx)(r.j,{children:"Clases"}),Object(a.jsx)(r.j,{children:"Arrow functions"}),Object(a.jsx)(r.j,{children:"Template literals"}),Object(a.jsx)(r.j,{children:"Modo estricto"}),Object(a.jsx)(r.j,{children:"Nuevas estructuras de datos"})]})]})})}},76:function(e,n,s){"use strict";s.r(n);s(2);var r=s(1),a=s(0);n.default=function(){return Object(a.jsx)(a.Fragment,{children:Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",className:"flex-center-column",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Pr\xe1ctica"}),Object(a.jsx)(r.s,{fontSize:50,children:Object(a.jsx)("a",{href:"https://codesandbox.io/s/clase-3-ejercicios-jcwep",children:"Ejercicios"})})]})})}},77:function(e,n,s){"use strict";s.r(n);s(2),s(40);var r=s(17),a=s(0);n.default=function(){return Object(a.jsxs)(a.Fragment,{children:[Object(a.jsx)(r.Agenda,{}),Object(a.jsx)(r.ExecutionContext,{}),Object(a.jsx)(r.BlockingCode,{}),Object(a.jsx)(r.Promises,{}),Object(a.jsx)(r.AsyncAwait,{}),Object(a.jsx)(r.AJAX,{}),Object(a.jsx)(r.XMLHttpRequest,{}),Object(a.jsx)(r.FetchAPI,{})]})}},78:function(e,n,s){"use strict";s.r(n);s(2);var r=s(1),a=s(0);n.default=function(){return Object(a.jsx)(a.Fragment,{children:Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",className:"flex-center-column",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Agenda"}),Object(a.jsxs)(r.l,{children:[Object(a.jsx)(r.j,{children:"Contextos de ejecuci\xf3n"}),Object(a.jsx)(r.j,{children:"C\xf3digo bloqueante y JS asincr\xf3nico"}),Object(a.jsx)(r.j,{children:"Promesas"}),Object(a.jsx)(r.j,{children:"Async/Await"}),Object(a.jsx)(r.j,{children:"AJAX"}),Object(a.jsx)(r.j,{children:"XMLHttpRequest (XHR)"}),Object(a.jsx)(r.j,{children:"Fetch API"}),Object(a.jsx)(r.j,{children:"FormData"}),Object(a.jsx)(r.j,{children:"Ejercicios"})]})]})})}},79:function(e,n,s){"use strict";s.r(n);s(2);var r=s(1),a=s(0);n.default=function(){return Object(a.jsxs)(a.Fragment,{children:[Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:Object(a.jsx)("a",{href:"https://www.javascripttutorial.net/javascript-execution-context/",children:"Execution context"})}),Object(a.jsx)(r.s,{fontSize:30,children:'Cuando el motor de JavaScript ejecuta un script, crea "contextos de ejecuci\xf3n". Podemos ver al contexto de ejecuci\xf3n como el entorno en el que JS es ejecutado.'}),Object(a.jsxs)(r.t,{fontSize:30,children:[Object(a.jsx)(r.j,{children:"Global execution context (GEC): Contexto de ejecuci\xf3n por defecto. Es creado cuando el archivo es cargado en el navegador. Todo el c\xf3digo que no se encuentra dentro de funciones u objetos se ejecuta en el GEC. Solo existe un GEC."}),Object(a.jsx)(r.j,{children:"Functional execution context (FEC): Este contexto es creado por JS cada vez que encuentra una invocaci\xf3n a una funci\xf3n. Cada funci\xf3n tiene su propio FEC y adem\xe1s tiene acceso a todo el c\xf3digo definido en el GEC. Si el c\xf3digo es ejecutado en modo estricto, el valor de this es undefinded, sino es window."}),Object(a.jsxs)(r.j,{children:["Eval: Contexto de ejecuci\xf3n dentro de la funci\xf3n ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval",children:"eval"}),"."]})]}),Object(a.jsx)(r.s,{fontSize:30,children:"Cada contexto consta de 2 fases: creation phase y execution phase."})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Creation phase"}),Object(a.jsxs)(r.l,{fontSize:30,children:[Object(a.jsxs)(r.j,{children:["Se crea el objeto global.",Object(a.jsxs)(r.t,{fontSize:30,children:[Object(a.jsxs)(r.j,{children:["En el caso del GEC, si se ejecuta en un navegador web se crea el objeto ",Object(a.jsx)("b",{children:"window"}),", y si se ejecuta en Node se crea el objeto ",Object(a.jsx)("b",{children:"global"}),"."]}),Object(a.jsx)(r.j,{children:"En el caso del FEC, se crea el objeto arguments que contiene una referencia a todos los par\xe1metros pasados a la funci\xf3n."})]})]}),Object(a.jsxs)(r.j,{children:["Se crea la asociaci\xf3n de ",Object(a.jsx)("b",{children:"this"})," con el objeto global.",Object(a.jsx)(r.t,{fontSize:30,children:Object(a.jsx)(r.j,{children:"En el caso del FEC, si se est\xe1 ejecutando el script en modo estricto, el valor de this ser\xe1 undefined. Sino ser\xe1 el objeto global (window o global)."})})]}),Object(a.jsx)(r.j,{children:"Se crea una heap en memoria para almacenar las variables y funciones."}),Object(a.jsx)(r.j,{children:"Se almacenan las declaraciones de funciones y variables en la heap, con un valor inicial de undefined."})]}),Object(a.jsx)(r.k,{children:"Cada vez que se crea un contexto de ejecuci\xf3n, antes de que el c\xf3digo se ejecute, el contexto pasa por esta fase."})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Execution phase"}),Object(a.jsx)(r.s,{fontSize:30,children:"Durante esta fase el motor de JS ejecuta el script l\xednea por l\xednea. Se asignan los valores a las variables y se ejecutan los llamados a funciones."}),Object(a.jsxs)(r.s,{fontSize:30,children:["Para monitorear los contextos de ejecuci\xf3n, JS usa una ",Object(a.jsx)("a",{href:"https://www.javascripttutorial.net/javascript-call-stack/",children:"call stack"})," (pila LIFO). M\xe1s info ",Object(a.jsx)("a",{href:"https://javascript.plainenglish.io/node-call-stack-explained-fd9df1c49d2e",children:"aqu\xed"}),"."]}),Object(a.jsx)("div",{className:"align-center",children:Object(a.jsx)("img",{src:"".concat("/js-training-classes","/images/call_stack.png"),alt:"Call Stack",height:"75%",width:"60%"})})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"This"}),Object(a.jsx)(r.s,{fontSize:30,children:"Como vimos, el valor de this depende de muchas factores, entre ellos la forma en la que una funcion es invocada, si se utiliza modo estricto o no, arrow functions, clases, etc."}),Object(a.jsxs)(r.s,{fontSize:30,children:["En JS tenemos disponible tambien el objeto ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/globalThis",children:"globalThis"}),", el cual siempre apunta al objeto global, sin importar el contexto de ejecuci\xf3n."]}),Object(a.jsxs)(r.s,{fontSize:30,children:["En ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this",children:" este art\xedculo"})," se detallan una gran variedad de escenarios distintos donde cambia tambi\xe9n el valor asignado a this."]})]})]})}},80:function(e,n,s){"use strict";s.r(n);s(2);var r=s(1),a=s(0);n.default=function(){return Object(a.jsxs)(a.Fragment,{children:[Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"C\xf3digo bloqueante"}),Object(a.jsx)(r.s,{fontSize:30,children:Object(a.jsx)("b",{children:Object(a.jsx)("i",{children:"JavaScript is a single-threaded non-blocking asynchronous concurrent language"})})}),Object(a.jsxs)(r.s,{fontSize:30,children:["Podemos pensar en un thread (hilo) como un proceso que los programas utilizan para ejecutar tareas, y cada thread solo puede ejecutar una tarea a la vez. JavaScript ejecuta todo el c\xf3digo en un solo thread (",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Asynchronous/Concepts#javascript_is_single_threaded",children:"JavaScript is single-threaded"}),"), llamado ",Object(a.jsx)("b",{children:"main thread"}),"."]}),Object(a.jsx)(r.s,{fontSize:30,children:"Todo lo que vimos hasta ahora es c\xf3digo sincr\xf3nico. Una sentencia se ejecuta una vez que la anterior finaliza."}),Object(a.jsx)(r.s,{fontSize:30,children:"El c\xf3digo sincr\xf3nico nos impone algunas limitaciones cuando lo que debemos ejecutar es costoso, ya que JS no le devuelve el control al browser y \xe9ste puede parecer congelado, imposibilitando que maneje cualquier otra acci\xf3n o tarea que el usuario solicite. A esto le llamamos c\xf3digo bloqueante."})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"C\xf3digo bloqueante"}),Object(a.jsx)(r.b,{language:"js",children:'\n          const result = document.querySelector("#result");\n          const clickHandler = () => {\n            let fecha;\n            for (let i = 0; i < 20000000; i++) {\n              fecha = new Date();\n            }\n            result.value = result.value + fecha;\n          };\n\n          document.querySelector("#startBtn").addEventListener("click", clickHandler);\n        '}),Object(a.jsx)("iframe",{src:"".concat("/js-training-classes","/snippets/class4/blockingCode.html")})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Web Workers"}),Object(a.jsxs)(r.s,{fontSize:30,children:["Los ",Object(a.jsx)("a",{href:"https://github.com/JulianPasquale/Webpack-templating/commit/2192a8391ccdb897ee806412a513227810131135",children:"Web Workers"})," hacen posible la ejecuci\xf3n de c\xf3digo JS en background, en un thread separado del principal. De esta forma podemos ejecutar tareas laboriosas o costosas sin bloquear completamente el navegador."]}),Object(a.jsxs)(r.s,{fontSize:30,children:["Podemos utilizar el constructor ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/API/Worker/Worker",children:"Worker"})," para crear un worker a partir de un script. Adem\xe1s un worker puede invocar a otro worker."]}),Object(a.jsxs)(r.s,{fontSize:30,children:["Los workers se comunican entre ellos y tambi\xe9n con el main thread a trav\xe9s del pasaje de mensajes utilizando las directivas ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/API/Worker/postMessage",children:"Worker.postMessage"})," y ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage",children:"Window.postMessage"})]}),Object(a.jsx)(r.s,{fontSize:30,children:"Sin embargo los workers cuentan con algunas limitaciones, como la imposibilidad de manipular el DOM y de acceder a varios atributos y m\xe9todos de window. Adem\xe1s no nos proveen una forma de esperar por un resultado, lo que suele ser una complicaci\xf3n cuando alguna tarea depende de otra."})]})]})}},81:function(e,n,s){"use strict";s.r(n);s(2);var r=s(1),a=s(0);n.default=function(){return Object(a.jsxs)(a.Fragment,{children:[Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Async JS"}),Object(a.jsx)(r.s,{fontSize:30,children:"Para solucionar algunos de los problemas que trae el c\xf3digo bloqueante y tambi\xe9n las limitaciones que presentan los workers, JavaScript nos permite la ejecuci\xf3n de c\xf3digo asincr\xf3nico."}),Object(a.jsx)(r.s,{fontSize:30,children:"El c\xf3digo asincr\xf3nico se sigue ejecutando en el main thread, sin embargo, JavaScript maneja los eventos de manera tal que asegura la ejecuci\xf3n de una manera asincr\xf3nica sin bloquear al navegador."}),Object(a.jsxs)(r.s,{fontSize:30,children:["Para m\xe1s informaci\xf3n ver ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/EventLoop",children:"Event loop"}),". Existen adem\xe1s una gran cantidad de art\xedculos y videos que hablan sobre el tema en profundidad, por ejemplo ",Object(a.jsx)("a",{href:"https://dev.to/upplabs/how-asynchronous-works-in-javascript-event-loop-concept-1ddb",children:"este"})," y ",Object(a.jsx)("a",{href:"https://www.youtube.com/watch?v=8aGhZQkoFbQ",children:"este"}),"."]})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Promesas"}),Object(a.jsxs)(r.s,{fontSize:30,children:["Una ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",children:"Promesa"})," es un objeto que representa la eventual finalizaci\xf3n o falla de una operaci\xf3n asincr\xf3nica."]}),Object(a.jsx)(r.s,{fontSize:30,children:"Una promesa puede estar en cualquiera de estos estados."}),Object(a.jsxs)(r.t,{fontSize:30,children:[Object(a.jsx)(r.j,{children:"pending: Estado inicial."}),Object(a.jsx)(r.j,{children:"fulfilled: La operaci\xf3n fue completada satisfactoriamente."}),Object(a.jsx)(r.j,{children:"rejected: La operaci\xf3n fall\xf3."})]})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Promesas"}),Object(a.jsx)(r.s,{fontSize:30,children:"Las promesas cuentan con una serie de m\xe9todos de instancia que nos permiten ejecutar funciones ante cada cambio de estado."}),Object(a.jsx)(r.s,{fontSize:30,children:"Estos m\xe9todos reciben funciones callback y siempre retornan una nueva promesa."}),Object(a.jsxs)(r.t,{fontSize:30,children:[Object(a.jsx)(r.j,{children:Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/then",children:"then"})}),Object(a.jsx)(r.j,{children:Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/catch",children:"catch"})}),Object(a.jsx)(r.j,{children:Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/finally",children:"finally"})})]}),Object(a.jsx)(r.b,{language:"js",children:" promesa.then(successCallback).catch(errorCallback).finally(finalCallback); "}),Object(a.jsx)(r.k,{children:"La funci\xf3n then recibe 2 callbacks. El primer argumento es el callback de \xe9xito que ser\xe1 llamado cuando la promesa est\xe9 en estado fulfilled, y el segundo es el callback de error que ser\xe1 llamado cuando la promesa pase a estado rejected. La implementaci\xf3n del catch no es m\xe1s que un then sin el primer argumento."})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Promesas"}),Object(a.jsx)("img",{src:"".concat("/js-training-classes","/images/promise_flow.png"),alt:"Promise flow",height:"60%"})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Encadenamiento de promesas"}),Object(a.jsx)(r.s,{fontSize:30,children:"En algunos casos es necesario ejecutar dos o m\xe1s operaciones asincr\xf3nicas de manera consecutiva. Debido a que los m\xe9todos que tenemos disponibles para trabajar con promesas, siempre devuelven una nueva promesa, es posible encadenar m\xe9todos que permitan trabajar con la promesa resultante y utilizar el resultado de la operaci\xf3n anterior."}),Object(a.jsx)(r.s,{fontSize:30,children:"Es importante descatar que los callbacks ser\xe1n ejecutados en el orden en el que fueron provistos."}),Object(a.jsx)(r.b,{language:"js",children:"\n          doSomething()\n          .then(result => doSomethingElse(result))\n          .then(newResult => doThirdThing(newResult))\n          .then(finalResult => {\n            console.log(`Got the final result: ${finalResult}`);\n          })\n          .catch(failureCallback);\n        "}),Object(a.jsxs)(r.s,{fontSize:30,children:["En caso de que alguna de las promesas de la cadena pase al estado rejected, se ejecutar\xe1 el callback de failure asociado mediante la funci\xf3n ",Object(a.jsx)("b",{children:"catch"}),"."]}),Object(a.jsx)(r.k,{children:"Este modelo de manejo de errores imita a lo que sucede con los bloques try-catch en el c\xf3digo sincr\xf3nico convencional, donde si se dispara una excepci\xf3n dentro del bloque try, se ejecutar\xe1 el c\xf3digo del bloque catch."})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Creaci\xf3n de promesas"}),Object(a.jsxs)(r.s,{fontSize:30,children:["Podemos utilizar el ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/Promise",children:"constructor"})," para crear promesas."]}),Object(a.jsx)(r.b,{language:"js",children:"\n          const myPromise = new Promise((resolve, reject) => {\n            setTimeout(() => {\n              resolve('foo');\n            }, 300);\n          });       \n        "}),Object(a.jsxs)(r.s,{fontSize:30,children:["Si nuestra promesa siempre ser\xe1 resuelta de manera exitosa, podemos utilizar ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/resolve",children:"Promise.resolve(value)"})," para crear una nueva promesa que al resolverse retornar\xe1 ",Object(a.jsx)("b",{children:"value"}),"."]}),Object(a.jsxs)(r.s,{fontSize:30,children:["Si nuestra promesa siempre ser\xe1 resuelta de manera erronea, podemos utilizar ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/reject",children:"Promise.reject(reason)"})," para crear una nueva promesa que fallar\xe1 con la raz\xf3n ",Object(a.jsx)("b",{children:"reason"}),"."]})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Promise API"}),Object(a.jsx)(r.s,{fontSize:30,children:"Adem\xe1s, la Promise API cuenta con algunos m\xe9todos que pueden ser \xfatiles cuando tenemos un conjunto de promesas que debemos procesar."}),Object(a.jsxs)(r.t,{fontSize:30,children:[Object(a.jsxs)(r.j,{children:[Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/all",children:"Promise.all"}),": Espera a que todas las promesas sean resueltas o que alguna falle."]}),Object(a.jsxs)(r.j,{children:[Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/allSettled",children:"Promise.allSettled"}),": Espere hasta que todas las promesas se hayan resuelto (cada una puede resolverse o rechazar)."]}),Object(a.jsxs)(r.j,{children:[Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/any",children:"Promise.any"}),": Espera a que una de las promesas sea resuelta."]}),Object(a.jsxs)(r.j,{children:[Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/race",children:"Promise.race"}),": Espera a que una de las promesas sea resuelta o falle."]})]})]})]})}},82:function(e,n,s){"use strict";s.r(n);s(2);var r=s(1),a=s(0);n.default=function(){return Object(a.jsxs)(a.Fragment,{children:[Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Async/Await"}),Object(a.jsx)(r.s,{fontSize:30,children:"Async/Await es un sugar syntax agregado en ECMAScript 2017 que funciona con promesas y hace m\xe1s f\xe1cil leer y escribir c\xf3digo asincr\xf3nico."}),Object(a.jsxs)(r.s,{fontSize:30,children:["La palabra clave ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function",children:"async"})," permite declarar funciones asincr\xf3nicas. Estas funciones al ser invocadas retornan una promesa."]}),Object(a.jsxs)(r.s,{fontSize:30,children:["La palabra clave ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/await",children:"await"})," es utilizada para esperar por promesas y solo puede ser utilizada dentro de una funci\xf3n asincr\xf3nica. Hace que la ejecuci\xf3n del c\xf3digo asincr\xf3nico se detenga hasta que la promesa tenga un estado fulfilled. Si la promesa pasa a estado rejected, se lanzar\xe1 un error con la raz\xf3n del fallo."]}),Object(a.jsx)(r.k,{children:"Si la expresi\xf3n que sigue a la palabra clave await no es una promesa, se convierte a resolved Promise (Promise.resolve(expression))."})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Async/Await"}),Object(a.jsx)(r.b,{language:"js",children:"\n          function resolveAfter2Seconds(x) {\n            return new Promise(resolve => {\n              setTimeout(() => {\n                resolve(x);\n              }, 2000);\n            });\n          }\n\n          async function main() {\n            const result = await resolveAfter2Seconds(10);\n            console.log(result); // 10\n          }\n\n          main();\n        "})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Async/Await"}),Object(a.jsxs)(r.s,{fontSize:30,children:["A diferencia de los m\xe9todos convencionales ",Object(a.jsx)("b",{children:"then"})," y ",Object(a.jsx)("b",{children:"catch"}),", no existe un mecanismo particular para el manejo de errores (promesas en estado rejected). Para ese tipo de casos debemos utilizar un bloque try-catch como lo har\xedamos con c\xf3digo sincr\xf3nico."]}),Object(a.jsx)(r.b,{language:"js",children:"\n          async function main() {\n            try {\n              const result = await Promise.reject(30);\n            } catch(e) {\n              console.error(e); // 30\n            }\n          }\n\n          main();\n        "})]})]})}},83:function(e,n,s){"use strict";s.r(n);s(2);var r=s(1),a=s(0);n.default=function(){return Object(a.jsx)(a.Fragment,{children:Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"AJAX"}),Object(a.jsxs)(r.s,{fontSize:30,children:[Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Glossary/AJAX",children:"AJAX"})," es una t\xe9cnica de programaci\xf3n que permite actualizar partes de un documento HTML sin la necesidad de refrescar la p\xe1gina completa."]}),Object(a.jsx)(r.s,{fontSize:30,children:"Permite trabajar asincr\xf3nicamente, es decir, el c\xf3digo continua ejecutandose mientras que una parte del documento es actualizada."}),Object(a.jsx)(r.s,{fontSize:30,children:"Inicialmente AJAX era un acr\xf3nimo para Asynchronous JavaScript And XML."}),Object(a.jsxs)(r.s,{fontSize:30,children:["Para construir sitios complejos que requer\xedan el uso de esta t\xe9cnica se utilizaba ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Glossary/XHR_(XMLHttpRequest)",children:"XHR"}),", sin embargo esta API no es tan utilizada actualmente."]})]})})}},84:function(e,n,s){"use strict";s.r(n);s(2);var r=s(1),a=s(0);n.default=function(){return Object(a.jsxs)(a.Fragment,{children:[Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"XMLHttpRequest"}),Object(a.jsxs)(r.s,{fontSize:30,children:[Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest",children:"XHR"})," es una API que se utiliza para interactuar con servidores web, a trav\xe9s del env\xedo de peticiones HTTP. Aunque su nombre pueda parecer confuso, XHR no solo sirve para obtener documentos XML, sino cualquier tipo de datos. Adem\xe1s permite realizar peticiones sincr\xf3nicas y asincr\xf3nicas, sin embargo se recomienda utilizar la forma asincr\xf3nica. ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Synchronous_and_Asynchronous_Requests",children:"Synchronous and Asynchronous Requests"}),"."]}),Object(a.jsxs)(r.s,{fontSize:30,children:["XHR provee la posibilidad de escuchar por varios eventos, a los cu\xe1les les podemos asociar manejadores de la misma forma que hacemos con los elementos del DOM e incluso utilizando el mismo m\xe9todo ",Object(a.jsx)("b",{children:"addEventListener"}),". La lista completa de eventos se puede ver ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest#events",children:"aqu\xed"}),"."]}),Object(a.jsx)(r.b,{language:"js",children:'\n          const request = new XMLHttpRequest();\n          \n          request.addEventListener("progress", updateProgress);\n          request.addEventListener("load", transferComplete);\n          request.addEventListener("error", transferFailed);\n          request.addEventListener("abort", transferCanceled);\n          '}),Object(a.jsx)(r.k,{children:"Los manejadores de eventos deben ser asociados antes de ejecutar la petici\xf3n, de lo contrario el progreso no podr\xe1 ser monitoreado."})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"XMLHttpRequest"}),Object(a.jsxs)(r.s,{fontSize:30,children:["El m\xe9todo de instancia ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/open",children:"open"})," es utilizado para incializar una request, y luego ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/send",children:"send"})," es utilizado para efectivamente enviar la petici\xf3n al servidor."]}),Object(a.jsxs)(r.s,{fontSize:30,children:["Adem\xe1s podemos utilizar otros m\xe9todos de instancia disponibles para, por ejemplo, ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/setRequestHeader",children:"agregar headers a la petici\xf3n"}),"."]}),Object(a.jsx)(r.b,{language:"js",children:"\n          const xhr = new XMLHttpRequest();\n          xhr.open('GET', '/server', true);\n          \n          xhr.addEventListener('load', (event) => {\n            // Request finished. Do processing here.\n          });\n          \n          xhr.send(null);\n        "})]})]})}},85:function(e,n,s){"use strict";s.r(n);s(2);var r=s(1),a=s(0);n.default=function(){return Object(a.jsxs)(a.Fragment,{children:[Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Fetch API"}),Object(a.jsxs)(r.s,{fontSize:30,children:["La ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API",children:"Fetch API"})," provee una interfaz para obtener recursos a trav\xe9s de peticiones HTTP."]}),Object(a.jsxs)(r.s,{fontSize:30,children:["Para realizar una petici\xf3n utilizamos la function ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch",children:"fetch"}),", que como primer par\xe1metro recibe la URL del recurso o servidor (o un objeto ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/API/Request",children:"Request"}),") y luego retorna una promesa que se resuelve a un objeto de tipo ",Object(a.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/API/Response",children:"Response"}),". Adem\xe1s podemos proveerle un objeto con propiedades adicionales como segundo par\xe1metro, donde podemos agregar headers, el body de la request, especificar el verbo HTTP, etc."]}),Object(a.jsx)(r.s,{fontSize:30,children:"La promesa resultante solo fallar\xe1 (estado rejected) cuando la petici\xf3n no pueda ser enviada por alg\xfan problema de red o algo que haya causado que la petici\xf3n no pueda ser enviada. A\xfan cuando el servidor responda con un estado HTTP 500 o 404, la promesa estar\xe1 en estado fulfilled y tendremos disponible el objeto Response para chequear manualmente la respuesta."})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Fetch API"}),Object(a.jsx)(r.s,{fontSize:30,children:"En caso de no especificar el verbo HTTP, por defecto se realizar\xe1 una peticion GET."}),Object(a.jsx)(r.b,{language:"js",children:"\n          fetch('http://example.com/movies.json')\n          .then(response => response.json())\n          .then(data => console.log(data));\n\n          // or with async/await\n\n          const fetchData = async () => {\n            const response = await fetch('http://example.com/movies.json');\n            const data = await response.json();\n            console.log(data);\n          }\n        "}),Object(a.jsx)(r.k,{children:"Notar en el ejemplo el uso del m\xe9todo json del objeto response, el cual nuevamente retorna una promesa y por eso se hace el encadenamiento con otro then."})]}),Object(a.jsxs)(r.n,{backgroundColor:"#0d0d0d",children:[Object(a.jsx)(r.g,{margin:"0px",fontSize:"50px",children:"Fetch API"}),Object(a.jsx)(r.s,{fontSize:30,children:"Para enviar un JSON con informaci\xf3n al servidor podemos hacer lo siguiente."}),Object(a.jsx)(r.b,{language:"js",children:"\n          const data = { username: 'example' };\n\n          fetch('https://example.com/profile', {\n            method: 'POST', // or 'PUT'\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(data),\n          })\n          .then(response => response.json())\n          .then(data => {\n            console.log('Success:', data);\n          })\n          .catch((error) => {\n            console.error('Error:', error);\n          });          \n        "})]})]})}},9:function(e,n,s){"use strict";s.r(n);var r=s(64);s.d(n,"Introduction",(function(){return r.default}));var a=s(65);s.d(n,"ArrayMethods",(function(){return a.default}));var t=s(66);s.d(n,"RestSpread",(function(){return t.default}));var o=s(67);s.d(n,"Destructuring",(function(){return o.default}));var c=s(68);s.d(n,"ConditionalChaining",(function(){return c.default}));var i=s(69);s.d(n,"Modules",(function(){return i.default}));var l=s(70);s.d(n,"ArrowFunctions",(function(){return l.default}));var d=s(71);s.d(n,"TemplateLiterals",(function(){return d.default}));var j=s(72);s.d(n,"Classes",(function(){return j.default}));var u=s(73);s.d(n,"StrictMode",(function(){return u.default}));var b=s(74);s.d(n,"NewDataStructures",(function(){return b.default}));var p=s(75);s.d(n,"Agenda",(function(){return p.default}));var h=s(76);s.d(n,"Excercises",(function(){return h.default}))}},[[510,1,2]]]);
//# sourceMappingURL=main.d50a8e0b.chunk.js.map